// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatMessage.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	chatMessage.proto
	chatService.proto

It has these top-level messages:
	Room
	Messages
	Message
	MessageText
	MessageImage
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Room struct {
	Workspace    string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	RoomId       string `protobuf:"bytes,11,opt,name=roomId" json:"roomId,omitempty"`
	UserId       string `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
	Name         string `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	PictureURL   string `protobuf:"bytes,14,opt,name=pictureURL" json:"pictureURL,omitempty"`
	Type         string `protobuf:"bytes,15,opt,name=type" json:"type,omitempty"`
	WebhookToken string `protobuf:"bytes,16,opt,name=WebhookToken" json:"WebhookToken,omitempty"`
	Created      int64  `protobuf:"varint,30,opt,name=created" json:"created,omitempty"`
	Modified     int64  `protobuf:"varint,31,opt,name=modified" json:"modified,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Room) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *Room) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Room) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Room) GetPictureURL() string {
	if m != nil {
		return m.PictureURL
	}
	return ""
}

func (m *Room) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Room) GetWebhookToken() string {
	if m != nil {
		return m.WebhookToken
	}
	return ""
}

func (m *Room) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Room) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

type Messages struct {
	AllCount int64      `protobuf:"varint,1,opt,name=allCount" json:"allCount,omitempty"`
	Limit    int32      `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset   int32      `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Order    string     `protobuf:"bytes,4,opt,name=order" json:"order,omitempty"`
	Messages []*Message `protobuf:"bytes,5,rep,name=messages" json:"messages,omitempty"`
}

func (m *Messages) Reset()                    { *m = Messages{} }
func (m *Messages) String() string            { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()               {}
func (*Messages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Messages) GetAllCount() int64 {
	if m != nil {
		return m.AllCount
	}
	return 0
}

func (m *Messages) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Messages) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Messages) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *Messages) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type Message struct {
	Workspace string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	RoomId    string `protobuf:"bytes,11,opt,name=roomId" json:"roomId,omitempty"`
	UserId    string `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
	Type      string `protobuf:"bytes,13,opt,name=type" json:"type,omitempty"`
	EventName string `protobuf:"bytes,14,opt,name=eventName" json:"eventName,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Message_Text
	//	*Message_Image
	Payload      isMessage_Payload `protobuf_oneof:"payload"`
	WebhookToken string            `protobuf:"bytes,16,opt,name=WebhookToken" json:"WebhookToken,omitempty"`
	Created      int64             `protobuf:"varint,30,opt,name=created" json:"created,omitempty"`
	Modified     int64             `protobuf:"varint,31,opt,name=modified" json:"modified,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_Text struct {
	Text *MessageText `protobuf:"bytes,21,opt,name=text,oneof"`
}
type Message_Image struct {
	Image *MessageImage `protobuf:"bytes,22,opt,name=image,oneof"`
}

func (*Message_Text) isMessage_Payload()  {}
func (*Message_Image) isMessage_Payload() {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *Message) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Message) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Message) GetText() *MessageText {
	if x, ok := m.GetPayload().(*Message_Text); ok {
		return x.Text
	}
	return nil
}

func (m *Message) GetImage() *MessageImage {
	if x, ok := m.GetPayload().(*Message_Image); ok {
		return x.Image
	}
	return nil
}

func (m *Message) GetWebhookToken() string {
	if m != nil {
		return m.WebhookToken
	}
	return ""
}

func (m *Message) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Message) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Text)(nil),
		(*Message_Image)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_Text:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Text); err != nil {
			return err
		}
	case *Message_Image:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Image); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Payload has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 21: // payload.text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessageText)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Text{msg}
		return true, err
	case 22: // payload.image
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessageImage)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Image{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_Text:
		s := proto.Size(x.Text)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Image:
		s := proto.Size(x.Image)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MessageText struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *MessageText) Reset()                    { *m = MessageText{} }
func (m *MessageText) String() string            { return proto.CompactTextString(m) }
func (*MessageText) ProtoMessage()               {}
func (*MessageText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MessageText) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type MessageImage struct {
	SourceUrl    string `protobuf:"bytes,1,opt,name=sourceUrl" json:"sourceUrl,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,2,opt,name=thumbnailUrl" json:"thumbnailUrl,omitempty"`
}

func (m *MessageImage) Reset()                    { *m = MessageImage{} }
func (m *MessageImage) String() string            { return proto.CompactTextString(m) }
func (*MessageImage) ProtoMessage()               {}
func (*MessageImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MessageImage) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func (m *MessageImage) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*Room)(nil), "swagchat.protobuf.Room")
	proto.RegisterType((*Messages)(nil), "swagchat.protobuf.Messages")
	proto.RegisterType((*Message)(nil), "swagchat.protobuf.Message")
	proto.RegisterType((*MessageText)(nil), "swagchat.protobuf.MessageText")
	proto.RegisterType((*MessageImage)(nil), "swagchat.protobuf.MessageImage")
}

func init() { proto.RegisterFile("chatMessage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x51, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xf3, 0xd1, 0x24, 0x93, 0x14, 0xe8, 0x0a, 0xaa, 0x55, 0x15, 0xa5, 0xc1, 0x27, 0x9f,
	0x52, 0xa9, 0x20, 0xb8, 0x97, 0x4b, 0x23, 0x01, 0x42, 0xab, 0x56, 0x48, 0xdc, 0xd6, 0xf6, 0x24,
	0xb1, 0xe2, 0xf5, 0x58, 0xeb, 0x35, 0x4d, 0xff, 0x0e, 0xff, 0x8b, 0xbf, 0xc1, 0x19, 0xed, 0xae,
	0x93, 0x1a, 0xa1, 0xde, 0xe0, 0xb6, 0xef, 0xcd, 0x1b, 0xed, 0x9b, 0xf7, 0xe0, 0x34, 0xd9, 0x48,
	0xf3, 0x09, 0xab, 0x4a, 0xae, 0x71, 0x51, 0x6a, 0x32, 0xc4, 0x4e, 0xab, 0x7b, 0xb9, 0xb6, 0xb4,
	0xc7, 0x71, 0xbd, 0x0a, 0x7f, 0x05, 0xd0, 0x13, 0x44, 0x8a, 0x4d, 0x61, 0x74, 0x4f, 0x7a, 0x5b,
	0x95, 0x32, 0x41, 0x1e, 0xcc, 0x83, 0x68, 0x24, 0x1e, 0x09, 0x76, 0x06, 0xc7, 0x9a, 0x48, 0x2d,
	0x53, 0x3e, 0x76, 0xa3, 0x06, 0x59, 0xbe, 0xae, 0x50, 0x2f, 0x53, 0x3e, 0xf1, 0xbc, 0x47, 0x8c,
	0x41, 0xaf, 0x90, 0x0a, 0xf9, 0x89, 0x63, 0xdd, 0x9b, 0xcd, 0x00, 0xca, 0x2c, 0x31, 0xb5, 0xc6,
	0x3b, 0xf1, 0x91, 0x3f, 0x73, 0x93, 0x16, 0x63, 0x77, 0xcc, 0x43, 0x89, 0xfc, 0xb9, 0xdf, 0xb1,
	0x6f, 0x16, 0xc2, 0xe4, 0x2b, 0xc6, 0x1b, 0xa2, 0xed, 0x2d, 0x6d, 0xb1, 0xe0, 0x2f, 0xdc, 0xec,
	0x0f, 0x8e, 0x71, 0x18, 0x24, 0x1a, 0xa5, 0xc1, 0x94, 0xcf, 0xe6, 0x41, 0xd4, 0x15, 0x7b, 0xc8,
	0xce, 0x61, 0xa8, 0x28, 0xcd, 0x56, 0x19, 0xa6, 0xfc, 0xc2, 0x8d, 0x0e, 0x38, 0xfc, 0x11, 0xc0,
	0xb0, 0x49, 0xa7, 0xb2, 0x42, 0x99, 0xe7, 0x1f, 0xa8, 0x2e, 0x8c, 0xbb, 0xbd, 0x2b, 0x0e, 0x98,
	0xbd, 0x84, 0x7e, 0x9e, 0xa9, 0xcc, 0xf0, 0xce, 0x3c, 0x88, 0xfa, 0xc2, 0x03, 0x7b, 0x38, 0xad,
	0x56, 0x15, 0x1a, 0xde, 0x75, 0x74, 0x83, 0xac, 0x9a, 0x74, 0x8a, 0x9a, 0xf7, 0x9c, 0x53, 0x0f,
	0xd8, 0x3b, 0x18, 0xaa, 0xe6, 0x2f, 0xde, 0x9f, 0x77, 0xa3, 0xf1, 0xd5, 0xf9, 0xe2, 0xaf, 0x2e,
	0x16, 0x8d, 0x1d, 0x71, 0xd0, 0x86, 0x3f, 0x3b, 0x30, 0x68, 0xd8, 0x7f, 0x5f, 0x90, 0x0b, 0xfb,
	0xa4, 0x15, 0xf6, 0x14, 0x46, 0xf8, 0x1d, 0x0b, 0xf3, 0xd9, 0x36, 0xe7, 0xfb, 0x79, 0x24, 0xd8,
	0x5b, 0xe8, 0x19, 0xdc, 0x19, 0xfe, 0x6a, 0x1e, 0x44, 0xe3, 0xab, 0xd9, 0xd3, 0xfe, 0x6f, 0x71,
	0x67, 0x6e, 0x8e, 0x84, 0x53, 0xb3, 0xf7, 0xd0, 0xcf, 0x94, 0x5c, 0x23, 0x3f, 0x73, 0x6b, 0x17,
	0x4f, 0xaf, 0x2d, 0xad, 0xec, 0xe6, 0x48, 0x78, 0xfd, 0xff, 0x6b, 0xfe, 0x7a, 0x04, 0x83, 0x52,
	0x3e, 0xe4, 0x24, 0xd3, 0xf0, 0x35, 0x8c, 0x5b, 0xa6, 0x5d, 0x28, 0xf6, 0xc4, 0xa0, 0x09, 0x05,
	0x77, 0x26, 0xfc, 0x02, 0x93, 0xb6, 0x41, 0x1b, 0x52, 0x45, 0xb5, 0x4e, 0xf0, 0x4e, 0xe7, 0xfb,
	0x1a, 0x0e, 0x84, 0x75, 0x6d, 0x36, 0xb5, 0x8a, 0x0b, 0x99, 0xe5, 0x56, 0xd0, 0xf1, 0xae, 0xdb,
	0xdc, 0xf5, 0xec, 0xdb, 0x74, 0x9d, 0x99, 0x4d, 0x1d, 0x2f, 0x12, 0x52, 0x97, 0xfb, 0x3c, 0x2e,
	0xf7, 0x79, 0xc4, 0xc7, 0xee, 0xf5, 0xe6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xd3, 0x56,
	0x60, 0xc1, 0x03, 0x00, 0x00,
}
