// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatMessage.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	chatMessage.proto
	chatService.proto

It has these top-level messages:
	User
	CreateUserRequest
	GetUserRequest
	Device
	RoomForUser
	UserForRoom
	Room
	Messages
	Message
	MessagePayload
	RoomIDs
	UserIDs
	RoleIDs
	UserRole
	CreateUserRoleRequest
	GetUserIDsOfUserRoleRequest
	GetRoleIDsOfUserRoleRequest
	RoomUser
	CreateRoomUserRequest
	GetUserIDsOfRoomUserRequest
	DeleteRoomUserRequest
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomType int32

const (
	RoomType_NONE        RoomType = 0
	RoomType_OneOnOne    RoomType = 1
	RoomType_PrivateRoom RoomType = 2
	RoomType_PublicRoom  RoomType = 3
	RoomType_NoticeRoom  RoomType = 4
	RoomType_RoomTypeEnd RoomType = 5
)

var RoomType_name = map[int32]string{
	0: "NONE",
	1: "OneOnOne",
	2: "PrivateRoom",
	3: "PublicRoom",
	4: "NoticeRoom",
	5: "RoomTypeEnd",
}
var RoomType_value = map[string]int32{
	"NONE":        0,
	"OneOnOne":    1,
	"PrivateRoom": 2,
	"PublicRoom":  3,
	"NoticeRoom":  4,
	"RoomTypeEnd": 5,
}

func (x RoomType) String() string {
	return proto.EnumName(RoomType_name, int32(x))
}
func (RoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SpeechMode int32

const (
	SpeechMode_SpeechModeNone               SpeechMode = 0
	SpeechMode_SpeechModeWakeupWebToWeb     SpeechMode = 1
	SpeechMode_SpeechModeWakeupWebToCloud   SpeechMode = 2
	SpeechMode_SpeechModeWakeupCloudToCloud SpeechMode = 3
	SpeechMode_SpeechModeAlways             SpeechMode = 4
	SpeechMode_SpeechModeManual             SpeechMode = 5
	SpeechMode_SpeechModeEnd                SpeechMode = 6
)

var SpeechMode_name = map[int32]string{
	0: "SpeechModeNone",
	1: "SpeechModeWakeupWebToWeb",
	2: "SpeechModeWakeupWebToCloud",
	3: "SpeechModeWakeupCloudToCloud",
	4: "SpeechModeAlways",
	5: "SpeechModeManual",
	6: "SpeechModeEnd",
}
var SpeechMode_value = map[string]int32{
	"SpeechModeNone":               0,
	"SpeechModeWakeupWebToWeb":     1,
	"SpeechModeWakeupWebToCloud":   2,
	"SpeechModeWakeupCloudToCloud": 3,
	"SpeechModeAlways":             4,
	"SpeechModeManual":             5,
	"SpeechModeEnd":                6,
}

func (x SpeechMode) String() string {
	return proto.EnumName(SpeechMode_name, int32(x))
}
func (SpeechMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type User struct {
	Id               uint64         `protobuf:"varint,11,opt,name=id" json:"id,omitempty"`
	UserId           string         `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
	Name             string         `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	PictureUrl       string         `protobuf:"bytes,14,opt,name=pictureUrl" json:"pictureUrl,omitempty"`
	InformationUrl   string         `protobuf:"bytes,15,opt,name=informationUrl" json:"informationUrl,omitempty"`
	UnreadCount      uint64         `protobuf:"varint,16,opt,name=unreadCount" json:"unreadCount,omitempty"`
	MetaData         []byte         `protobuf:"bytes,17,opt,name=metaData,proto3" json:"metaData,omitempty"`
	Public           bool           `protobuf:"varint,18,opt,name=public" json:"public,omitempty"`
	CanBlock         bool           `protobuf:"varint,19,opt,name=canBlock" json:"canBlock,omitempty"`
	Lang             string         `protobuf:"bytes,20,opt,name=lang" json:"lang,omitempty"`
	AccessToken      string         `protobuf:"bytes,21,opt,name=accessToken" json:"accessToken,omitempty"`
	LastAccessRoomId string         `protobuf:"bytes,22,opt,name=lastAccessRoomId" json:"lastAccessRoomId,omitempty"`
	LastAccessed     int64          `protobuf:"varint,23,opt,name=lastAccessed" json:"lastAccessed,omitempty"`
	Created          int64          `protobuf:"varint,31,opt,name=created" json:"created,omitempty"`
	Modified         int64          `protobuf:"varint,32,opt,name=modified" json:"modified,omitempty"`
	Deleted          int64          `protobuf:"varint,33,opt,name=deleted" json:"deleted,omitempty"`
	Roles            []int32        `protobuf:"varint,40,rep,packed,name=roles" json:"roles,omitempty"`
	Rooms            []*RoomForUser `protobuf:"bytes,41,rep,name=rooms" json:"rooms,omitempty"`
	Devices          []*Device      `protobuf:"bytes,42,rep,name=devices" json:"devices,omitempty"`
	Blocks           []string       `protobuf:"bytes,43,rep,name=blocks" json:"blocks,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *User) GetInformationUrl() string {
	if m != nil {
		return m.InformationUrl
	}
	return ""
}

func (m *User) GetUnreadCount() uint64 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *User) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *User) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *User) GetCanBlock() bool {
	if m != nil {
		return m.CanBlock
	}
	return false
}

func (m *User) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *User) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *User) GetLastAccessRoomId() string {
	if m != nil {
		return m.LastAccessRoomId
	}
	return ""
}

func (m *User) GetLastAccessed() int64 {
	if m != nil {
		return m.LastAccessed
	}
	return 0
}

func (m *User) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *User) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *User) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func (m *User) GetRoles() []int32 {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetRooms() []*RoomForUser {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *User) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *User) GetBlocks() []string {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type CreateUserRequest struct {
	Workspace      string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	UserId         string `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
	Name           string `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	PictureUrl     string `protobuf:"bytes,14,opt,name=pictureUrl" json:"pictureUrl,omitempty"`
	InformationUrl string `protobuf:"bytes,15,opt,name=informationUrl" json:"informationUrl,omitempty"`
	MetaData       []byte `protobuf:"bytes,17,opt,name=metaData,proto3" json:"metaData,omitempty"`
	Public         bool   `protobuf:"varint,18,opt,name=public" json:"public,omitempty"`
	CanBlock       bool   `protobuf:"varint,19,opt,name=canBlock" json:"canBlock,omitempty"`
	Lang           string `protobuf:"bytes,20,opt,name=lang" json:"lang,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateUserRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *CreateUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateUserRequest) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *CreateUserRequest) GetInformationUrl() string {
	if m != nil {
		return m.InformationUrl
	}
	return ""
}

func (m *CreateUserRequest) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *CreateUserRequest) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *CreateUserRequest) GetCanBlock() bool {
	if m != nil {
		return m.CanBlock
	}
	return false
}

func (m *CreateUserRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

type GetUserRequest struct {
	Workspace string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	UserId    string `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GetUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Device struct {
	Workspace            string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	UserID               string `protobuf:"bytes,11,opt,name=userID" json:"userID,omitempty"`
	Platform             int32  `protobuf:"varint,12,opt,name=platform" json:"platform,omitempty"`
	Token                string `protobuf:"bytes,13,opt,name=token" json:"token,omitempty"`
	NotificationDeviceID string `protobuf:"bytes,14,opt,name=notificationDeviceID" json:"notificationDeviceID,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Device) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *Device) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Device) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *Device) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Device) GetNotificationDeviceID() string {
	if m != nil {
		return m.NotificationDeviceID
	}
	return ""
}

type RoomForUser struct {
	RoomID             string         `protobuf:"bytes,1,opt,name=roomID" json:"roomID,omitempty"`
	UserID             string         `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	Name               string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	PictureURL         string         `protobuf:"bytes,4,opt,name=pictureURL" json:"pictureURL,omitempty"`
	InformationURL     string         `protobuf:"bytes,5,opt,name=informationURL" json:"informationURL,omitempty"`
	MetaData           []byte         `protobuf:"bytes,6,opt,name=metaData,proto3" json:"metaData,omitempty"`
	Type               RoomType       `protobuf:"varint,7,opt,name=type,enum=swagchat.protobuf.RoomType" json:"type,omitempty"`
	LastMessage        string         `protobuf:"bytes,8,opt,name=lastMessage" json:"lastMessage,omitempty"`
	LastMessageUpdated int64          `protobuf:"varint,9,opt,name=lastMessageUpdated" json:"lastMessageUpdated,omitempty"`
	CanLeft            bool           `protobuf:"varint,10,opt,name=canLeft" json:"canLeft,omitempty"`
	Created            int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	Modified           int64          `protobuf:"varint,12,opt,name=modified" json:"modified,omitempty"`
	Users              []*UserForRoom `protobuf:"bytes,13,rep,name=users" json:"users,omitempty"`
	RuUnreadCount      int64          `protobuf:"varint,14,opt,name=ruUnreadCount" json:"ruUnreadCount,omitempty"`
}

func (m *RoomForUser) Reset()                    { *m = RoomForUser{} }
func (m *RoomForUser) String() string            { return proto.CompactTextString(m) }
func (*RoomForUser) ProtoMessage()               {}
func (*RoomForUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RoomForUser) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *RoomForUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *RoomForUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoomForUser) GetPictureURL() string {
	if m != nil {
		return m.PictureURL
	}
	return ""
}

func (m *RoomForUser) GetInformationURL() string {
	if m != nil {
		return m.InformationURL
	}
	return ""
}

func (m *RoomForUser) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *RoomForUser) GetType() RoomType {
	if m != nil {
		return m.Type
	}
	return RoomType_NONE
}

func (m *RoomForUser) GetLastMessage() string {
	if m != nil {
		return m.LastMessage
	}
	return ""
}

func (m *RoomForUser) GetLastMessageUpdated() int64 {
	if m != nil {
		return m.LastMessageUpdated
	}
	return 0
}

func (m *RoomForUser) GetCanLeft() bool {
	if m != nil {
		return m.CanLeft
	}
	return false
}

func (m *RoomForUser) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *RoomForUser) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *RoomForUser) GetUsers() []*UserForRoom {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *RoomForUser) GetRuUnreadCount() int64 {
	if m != nil {
		return m.RuUnreadCount
	}
	return 0
}

type UserForRoom struct {
	RoomID         string `protobuf:"bytes,1,opt,name=roomID" json:"roomID,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	PictureURL     string `protobuf:"bytes,4,opt,name=pictureURL" json:"pictureURL,omitempty"`
	InformationURL string `protobuf:"bytes,5,opt,name=informationURL" json:"informationURL,omitempty"`
	MetaData       []byte `protobuf:"bytes,6,opt,name=metaData,proto3" json:"metaData,omitempty"`
	CanBlock       bool   `protobuf:"varint,7,opt,name=canBlock" json:"canBlock,omitempty"`
	LastAccessed   int64  `protobuf:"varint,8,opt,name=lastAccessed" json:"lastAccessed,omitempty"`
	Created        int64  `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Modified       int64  `protobuf:"varint,10,opt,name=modified" json:"modified,omitempty"`
	RuDisplay      bool   `protobuf:"varint,11,opt,name=ruDisplay" json:"ruDisplay,omitempty"`
}

func (m *UserForRoom) Reset()                    { *m = UserForRoom{} }
func (m *UserForRoom) String() string            { return proto.CompactTextString(m) }
func (*UserForRoom) ProtoMessage()               {}
func (*UserForRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserForRoom) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *UserForRoom) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserForRoom) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserForRoom) GetPictureURL() string {
	if m != nil {
		return m.PictureURL
	}
	return ""
}

func (m *UserForRoom) GetInformationURL() string {
	if m != nil {
		return m.InformationURL
	}
	return ""
}

func (m *UserForRoom) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *UserForRoom) GetCanBlock() bool {
	if m != nil {
		return m.CanBlock
	}
	return false
}

func (m *UserForRoom) GetLastAccessed() int64 {
	if m != nil {
		return m.LastAccessed
	}
	return 0
}

func (m *UserForRoom) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *UserForRoom) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *UserForRoom) GetRuDisplay() bool {
	if m != nil {
		return m.RuDisplay
	}
	return false
}

type Room struct {
	Workspace             string         `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	Id                    uint64         `protobuf:"varint,11,opt,name=id" json:"id,omitempty"`
	RoomId                string         `protobuf:"bytes,12,opt,name=roomId" json:"roomId,omitempty"`
	UserId                string         `protobuf:"bytes,13,opt,name=userId" json:"userId,omitempty"`
	Name                  string         `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	PictureUrl            string         `protobuf:"bytes,15,opt,name=pictureUrl" json:"pictureUrl,omitempty"`
	InformationUrl        string         `protobuf:"bytes,16,opt,name=informationUrl" json:"informationUrl,omitempty"`
	MetaData              []byte         `protobuf:"bytes,17,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
	AvailableMessageTypes string         `protobuf:"bytes,18,opt,name=AvailableMessageTypes" json:"AvailableMessageTypes,omitempty"`
	Type                  RoomType       `protobuf:"varint,19,opt,name=type,enum=swagchat.protobuf.RoomType" json:"type,omitempty"`
	WebhookToken          string         `protobuf:"bytes,20,opt,name=WebhookToken" json:"WebhookToken,omitempty"`
	LastMessage           string         `protobuf:"bytes,21,opt,name=lastMessage" json:"lastMessage,omitempty"`
	LastMessageUpdated    int64          `protobuf:"varint,22,opt,name=lastMessageUpdated" json:"lastMessageUpdated,omitempty"`
	MessageCount          int64          `protobuf:"varint,23,opt,name=messageCount" json:"messageCount,omitempty"`
	NotificationTopicId   string         `protobuf:"bytes,24,opt,name=notificationTopicId" json:"notificationTopicId,omitempty"`
	CanLeft               bool           `protobuf:"varint,25,opt,name=canLeft" json:"canLeft,omitempty"`
	SpeechMode            SpeechMode     `protobuf:"varint,26,opt,name=speechMode,enum=swagchat.protobuf.SpeechMode" json:"speechMode,omitempty"`
	Created               int64          `protobuf:"varint,30,opt,name=created" json:"created,omitempty"`
	Modified              int64          `protobuf:"varint,31,opt,name=modified" json:"modified,omitempty"`
	Deleted               int64          `protobuf:"varint,32,opt,name=deleted" json:"deleted,omitempty"`
	Users                 []*UserForRoom `protobuf:"bytes,40,rep,name=users" json:"users,omitempty"`
	UserIds               []string       `protobuf:"bytes,41,rep,name=userIds" json:"userIds,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Room) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *Room) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Room) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Room) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Room) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *Room) GetInformationUrl() string {
	if m != nil {
		return m.InformationUrl
	}
	return ""
}

func (m *Room) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *Room) GetAvailableMessageTypes() string {
	if m != nil {
		return m.AvailableMessageTypes
	}
	return ""
}

func (m *Room) GetType() RoomType {
	if m != nil {
		return m.Type
	}
	return RoomType_NONE
}

func (m *Room) GetWebhookToken() string {
	if m != nil {
		return m.WebhookToken
	}
	return ""
}

func (m *Room) GetLastMessage() string {
	if m != nil {
		return m.LastMessage
	}
	return ""
}

func (m *Room) GetLastMessageUpdated() int64 {
	if m != nil {
		return m.LastMessageUpdated
	}
	return 0
}

func (m *Room) GetMessageCount() int64 {
	if m != nil {
		return m.MessageCount
	}
	return 0
}

func (m *Room) GetNotificationTopicId() string {
	if m != nil {
		return m.NotificationTopicId
	}
	return ""
}

func (m *Room) GetCanLeft() bool {
	if m != nil {
		return m.CanLeft
	}
	return false
}

func (m *Room) GetSpeechMode() SpeechMode {
	if m != nil {
		return m.SpeechMode
	}
	return SpeechMode_SpeechModeNone
}

func (m *Room) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Room) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *Room) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func (m *Room) GetUsers() []*UserForRoom {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Room) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type Messages struct {
	AllCount int64      `protobuf:"varint,1,opt,name=allCount" json:"allCount,omitempty"`
	Limit    int32      `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset   int32      `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Order    string     `protobuf:"bytes,4,opt,name=order" json:"order,omitempty"`
	Messages []*Message `protobuf:"bytes,5,rep,name=messages" json:"messages,omitempty"`
}

func (m *Messages) Reset()                    { *m = Messages{} }
func (m *Messages) String() string            { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()               {}
func (*Messages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Messages) GetAllCount() int64 {
	if m != nil {
		return m.AllCount
	}
	return 0
}

func (m *Messages) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Messages) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Messages) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *Messages) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type Message struct {
	Workspace     string          `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	Endpoint      string          `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
	Authorization string          `protobuf:"bytes,3,opt,name=authorization" json:"authorization,omitempty"`
	UserIds       []string        `protobuf:"bytes,4,rep,name=userIds" json:"userIds,omitempty"`
	RoomId        string          `protobuf:"bytes,11,opt,name=roomId" json:"roomId,omitempty"`
	UserId        string          `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
	Type          string          `protobuf:"bytes,13,opt,name=type" json:"type,omitempty"`
	EventName     string          `protobuf:"bytes,14,opt,name=eventName" json:"eventName,omitempty"`
	Payload       *MessagePayload `protobuf:"bytes,15,opt,name=payload" json:"payload,omitempty"`
	Role          int32           `protobuf:"varint,16,opt,name=role" json:"role,omitempty"`
	WebhookToken  string          `protobuf:"bytes,17,opt,name=WebhookToken" json:"WebhookToken,omitempty"`
	Created       int64           `protobuf:"varint,30,opt,name=created" json:"created,omitempty"`
	Modified      int64           `protobuf:"varint,31,opt,name=modified" json:"modified,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Message) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *Message) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Message) GetAuthorization() string {
	if m != nil {
		return m.Authorization
	}
	return ""
}

func (m *Message) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *Message) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Message) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Message) GetPayload() *MessagePayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *Message) GetWebhookToken() string {
	if m != nil {
		return m.WebhookToken
	}
	return ""
}

func (m *Message) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Message) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

type MessagePayload struct {
	// text
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	// image
	Mime         string `protobuf:"bytes,11,opt,name=mime" json:"mime,omitempty"`
	Filename     string `protobuf:"bytes,12,opt,name=filename" json:"filename,omitempty"`
	SourceUrl    string `protobuf:"bytes,13,opt,name=sourceUrl" json:"sourceUrl,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,14,opt,name=thumbnailUrl" json:"thumbnailUrl,omitempty"`
	Width        int32  `protobuf:"varint,15,opt,name=width" json:"width,omitempty"`
	Height       int32  `protobuf:"varint,16,opt,name=height" json:"height,omitempty"`
}

func (m *MessagePayload) Reset()                    { *m = MessagePayload{} }
func (m *MessagePayload) String() string            { return proto.CompactTextString(m) }
func (*MessagePayload) ProtoMessage()               {}
func (*MessagePayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MessagePayload) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MessagePayload) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *MessagePayload) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *MessagePayload) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func (m *MessagePayload) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *MessagePayload) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *MessagePayload) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RoomIDs struct {
	RoomIDs []string `protobuf:"bytes,1,rep,name=roomIDs" json:"roomIDs,omitempty"`
}

func (m *RoomIDs) Reset()                    { *m = RoomIDs{} }
func (m *RoomIDs) String() string            { return proto.CompactTextString(m) }
func (*RoomIDs) ProtoMessage()               {}
func (*RoomIDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RoomIDs) GetRoomIDs() []string {
	if m != nil {
		return m.RoomIDs
	}
	return nil
}

type UserIDs struct {
	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs" json:"userIDs,omitempty"`
}

func (m *UserIDs) Reset()                    { *m = UserIDs{} }
func (m *UserIDs) String() string            { return proto.CompactTextString(m) }
func (*UserIDs) ProtoMessage()               {}
func (*UserIDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UserIDs) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

type RoleIDs struct {
	RoleIDs []int32 `protobuf:"varint,1,rep,packed,name=roleIDs" json:"roleIDs,omitempty"`
}

func (m *RoleIDs) Reset()                    { *m = RoleIDs{} }
func (m *RoleIDs) String() string            { return proto.CompactTextString(m) }
func (*RoleIDs) ProtoMessage()               {}
func (*RoleIDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RoleIDs) GetRoleIDs() []int32 {
	if m != nil {
		return m.RoleIDs
	}
	return nil
}

type UserRole struct {
	// @inject_tag: db:"user_id"
	UserID string `protobuf:"bytes,11,opt,name=userID" json:"userID,omitempty"`
	// @inject_tag: db:"role_id"
	RoleID int32 `protobuf:"varint,12,opt,name=roleID" json:"roleID,omitempty"`
}

func (m *UserRole) Reset()                    { *m = UserRole{} }
func (m *UserRole) String() string            { return proto.CompactTextString(m) }
func (*UserRole) ProtoMessage()               {}
func (*UserRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UserRole) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserRole) GetRoleID() int32 {
	if m != nil {
		return m.RoleID
	}
	return 0
}

type CreateUserRoleRequest struct {
	Workspace string    `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	UserRole  *UserRole `protobuf:"bytes,11,opt,name=userRole" json:"userRole,omitempty"`
}

func (m *CreateUserRoleRequest) Reset()                    { *m = CreateUserRoleRequest{} }
func (m *CreateUserRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRoleRequest) ProtoMessage()               {}
func (*CreateUserRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CreateUserRoleRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *CreateUserRoleRequest) GetUserRole() *UserRole {
	if m != nil {
		return m.UserRole
	}
	return nil
}

type GetUserIDsOfUserRoleRequest struct {
	Workspace string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	RoleID    int32  `protobuf:"varint,12,opt,name=roleID" json:"roleID,omitempty"`
}

func (m *GetUserIDsOfUserRoleRequest) Reset()                    { *m = GetUserIDsOfUserRoleRequest{} }
func (m *GetUserIDsOfUserRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserIDsOfUserRoleRequest) ProtoMessage()               {}
func (*GetUserIDsOfUserRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetUserIDsOfUserRoleRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GetUserIDsOfUserRoleRequest) GetRoleID() int32 {
	if m != nil {
		return m.RoleID
	}
	return 0
}

type GetRoleIDsOfUserRoleRequest struct {
	Workspace string `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	UserID    string `protobuf:"bytes,11,opt,name=userID" json:"userID,omitempty"`
}

func (m *GetRoleIDsOfUserRoleRequest) Reset()                    { *m = GetRoleIDsOfUserRoleRequest{} }
func (m *GetRoleIDsOfUserRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRoleIDsOfUserRoleRequest) ProtoMessage()               {}
func (*GetRoleIDsOfUserRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetRoleIDsOfUserRoleRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GetRoleIDsOfUserRoleRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type RoomUser struct {
	// @inject_tag: db:"room_id"
	RoomID string `protobuf:"bytes,11,opt,name=roomID" json:"roomID,omitempty"`
	// @inject_tag: db:"user_id"
	UserID string `protobuf:"bytes,12,opt,name=userID" json:"userID,omitempty"`
	// @inject_tag: db:"unread_count"
	UnreadCount int32 `protobuf:"varint,13,opt,name=unreadCount" json:"unreadCount,omitempty"`
	// @inject_tag: db:"display"
	Display bool `protobuf:"varint,14,opt,name=display" json:"display,omitempty"`
}

func (m *RoomUser) Reset()                    { *m = RoomUser{} }
func (m *RoomUser) String() string            { return proto.CompactTextString(m) }
func (*RoomUser) ProtoMessage()               {}
func (*RoomUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RoomUser) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *RoomUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *RoomUser) GetUnreadCount() int32 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *RoomUser) GetDisplay() bool {
	if m != nil {
		return m.Display
	}
	return false
}

type CreateRoomUserRequest struct {
	Workspace string   `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	RoomID    string   `protobuf:"bytes,11,opt,name=roomID" json:"roomID,omitempty"`
	UserIDs   []string `protobuf:"bytes,12,rep,name=userIDs" json:"userIDs,omitempty"`
	Display   bool     `protobuf:"varint,13,opt,name=display" json:"display,omitempty"`
}

func (m *CreateRoomUserRequest) Reset()                    { *m = CreateRoomUserRequest{} }
func (m *CreateRoomUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoomUserRequest) ProtoMessage()               {}
func (*CreateRoomUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CreateRoomUserRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *CreateRoomUserRequest) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *CreateRoomUserRequest) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func (m *CreateRoomUserRequest) GetDisplay() bool {
	if m != nil {
		return m.Display
	}
	return false
}

type GetUserIDsOfRoomUserRequest struct {
	Workspace string  `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	RoomID    string  `protobuf:"bytes,11,opt,name=roomID" json:"roomID,omitempty"`
	RoleIDs   []int32 `protobuf:"varint,12,rep,packed,name=roleIDs" json:"roleIDs,omitempty"`
}

func (m *GetUserIDsOfRoomUserRequest) Reset()                    { *m = GetUserIDsOfRoomUserRequest{} }
func (m *GetUserIDsOfRoomUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserIDsOfRoomUserRequest) ProtoMessage()               {}
func (*GetUserIDsOfRoomUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetUserIDsOfRoomUserRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GetUserIDsOfRoomUserRequest) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *GetUserIDsOfRoomUserRequest) GetRoleIDs() []int32 {
	if m != nil {
		return m.RoleIDs
	}
	return nil
}

type DeleteRoomUserRequest struct {
	Workspace string   `protobuf:"bytes,1,opt,name=workspace" json:"workspace,omitempty"`
	RoomID    string   `protobuf:"bytes,11,opt,name=roomID" json:"roomID,omitempty"`
	UserIDs   []string `protobuf:"bytes,12,rep,name=userIDs" json:"userIDs,omitempty"`
}

func (m *DeleteRoomUserRequest) Reset()                    { *m = DeleteRoomUserRequest{} }
func (m *DeleteRoomUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoomUserRequest) ProtoMessage()               {}
func (*DeleteRoomUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *DeleteRoomUserRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *DeleteRoomUserRequest) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *DeleteRoomUserRequest) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "swagchat.protobuf.User")
	proto.RegisterType((*CreateUserRequest)(nil), "swagchat.protobuf.CreateUserRequest")
	proto.RegisterType((*GetUserRequest)(nil), "swagchat.protobuf.GetUserRequest")
	proto.RegisterType((*Device)(nil), "swagchat.protobuf.Device")
	proto.RegisterType((*RoomForUser)(nil), "swagchat.protobuf.RoomForUser")
	proto.RegisterType((*UserForRoom)(nil), "swagchat.protobuf.UserForRoom")
	proto.RegisterType((*Room)(nil), "swagchat.protobuf.Room")
	proto.RegisterType((*Messages)(nil), "swagchat.protobuf.Messages")
	proto.RegisterType((*Message)(nil), "swagchat.protobuf.Message")
	proto.RegisterType((*MessagePayload)(nil), "swagchat.protobuf.MessagePayload")
	proto.RegisterType((*RoomIDs)(nil), "swagchat.protobuf.RoomIDs")
	proto.RegisterType((*UserIDs)(nil), "swagchat.protobuf.UserIDs")
	proto.RegisterType((*RoleIDs)(nil), "swagchat.protobuf.RoleIDs")
	proto.RegisterType((*UserRole)(nil), "swagchat.protobuf.UserRole")
	proto.RegisterType((*CreateUserRoleRequest)(nil), "swagchat.protobuf.CreateUserRoleRequest")
	proto.RegisterType((*GetUserIDsOfUserRoleRequest)(nil), "swagchat.protobuf.GetUserIDsOfUserRoleRequest")
	proto.RegisterType((*GetRoleIDsOfUserRoleRequest)(nil), "swagchat.protobuf.GetRoleIDsOfUserRoleRequest")
	proto.RegisterType((*RoomUser)(nil), "swagchat.protobuf.RoomUser")
	proto.RegisterType((*CreateRoomUserRequest)(nil), "swagchat.protobuf.CreateRoomUserRequest")
	proto.RegisterType((*GetUserIDsOfRoomUserRequest)(nil), "swagchat.protobuf.GetUserIDsOfRoomUserRequest")
	proto.RegisterType((*DeleteRoomUserRequest)(nil), "swagchat.protobuf.DeleteRoomUserRequest")
	proto.RegisterEnum("swagchat.protobuf.RoomType", RoomType_name, RoomType_value)
	proto.RegisterEnum("swagchat.protobuf.SpeechMode", SpeechMode_name, SpeechMode_value)
}

func init() { proto.RegisterFile("chatMessage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4d, 0x6f, 0xdb, 0x46,
	0x13, 0x0e, 0x2d, 0xc9, 0x96, 0x46, 0x1f, 0x91, 0x37, 0x76, 0xde, 0x8d, 0xe3, 0xd7, 0x51, 0xf8,
	0xbe, 0x28, 0x54, 0x17, 0x70, 0x0a, 0x27, 0x68, 0x81, 0x16, 0x3d, 0x24, 0x51, 0x52, 0x18, 0xf0,
	0x47, 0xc0, 0xd8, 0x30, 0xd0, 0xdb, 0x8a, 0x5c, 0x59, 0x84, 0x29, 0x2e, 0xcb, 0x0f, 0xbb, 0xee,
	0xad, 0xb7, 0xf6, 0xd6, 0xdf, 0x50, 0xf4, 0x7f, 0xf4, 0xd2, 0x4b, 0xff, 0x47, 0x6f, 0xfd, 0x13,
	0xc5, 0xce, 0x2e, 0x45, 0x52, 0x26, 0x03, 0x27, 0xfd, 0x42, 0x6f, 0x7c, 0x66, 0x67, 0x77, 0x67,
	0x9f, 0x99, 0x79, 0x76, 0x09, 0xab, 0xf6, 0x94, 0xc5, 0x07, 0x3c, 0x8a, 0xd8, 0x19, 0xdf, 0x09,
	0x42, 0x11, 0x0b, 0xb2, 0x1a, 0x5d, 0xb2, 0x33, 0x69, 0x56, 0x78, 0x9c, 0x4c, 0xcc, 0xdf, 0xea,
	0x50, 0x3f, 0x89, 0x78, 0x48, 0x7a, 0xb0, 0xe4, 0x3a, 0xb4, 0x3d, 0x30, 0x86, 0x75, 0x6b, 0xc9,
	0x75, 0xc8, 0x5d, 0x58, 0x4e, 0x22, 0x1e, 0xee, 0x39, 0xb4, 0x33, 0x30, 0x86, 0x2d, 0x4b, 0x23,
	0x42, 0xa0, 0xee, 0xb3, 0x19, 0xa7, 0x5d, 0xb4, 0xe2, 0x37, 0xd9, 0x02, 0x08, 0x5c, 0x3b, 0x4e,
	0x42, 0x7e, 0x12, 0x7a, 0xb4, 0x87, 0x23, 0x39, 0x0b, 0x79, 0x0f, 0x7a, 0xae, 0x3f, 0x11, 0xe1,
	0x8c, 0xc5, 0xae, 0xf0, 0xa5, 0xcf, 0x6d, 0xf4, 0x59, 0xb0, 0x92, 0x01, 0xb4, 0x13, 0x3f, 0xe4,
	0xcc, 0x79, 0x2e, 0x12, 0x3f, 0xa6, 0x7d, 0x0c, 0x26, 0x6f, 0x22, 0x1b, 0xd0, 0x9c, 0xf1, 0x98,
	0x8d, 0x58, 0xcc, 0xe8, 0xea, 0xc0, 0x18, 0x76, 0xac, 0x39, 0x96, 0x11, 0x07, 0xc9, 0xd8, 0x73,
	0x6d, 0x4a, 0x06, 0xc6, 0xb0, 0x69, 0x69, 0x24, 0xe7, 0xd8, 0xcc, 0x7f, 0xe6, 0x09, 0xfb, 0x9c,
	0xde, 0xc1, 0x91, 0x39, 0x96, 0xa7, 0xf1, 0x98, 0x7f, 0x46, 0xd7, 0xd4, 0x69, 0xe4, 0xb7, 0x8c,
	0x82, 0xd9, 0x36, 0x8f, 0xa2, 0x63, 0x71, 0xce, 0x7d, 0xba, 0x8e, 0x43, 0x79, 0x13, 0xd9, 0x86,
	0xbe, 0xc7, 0xa2, 0xf8, 0x29, 0x9a, 0x2c, 0x21, 0x66, 0x7b, 0x0e, 0xbd, 0x8b, 0x6e, 0xd7, 0xec,
	0xc4, 0x84, 0x4e, 0x66, 0xe3, 0x0e, 0xfd, 0xcf, 0xc0, 0x18, 0xd6, 0xac, 0x82, 0x8d, 0x50, 0x58,
	0xb1, 0x43, 0xce, 0x62, 0xee, 0xd0, 0x07, 0x38, 0x9c, 0x42, 0x3c, 0xaf, 0x70, 0xdc, 0x89, 0xcb,
	0x1d, 0x3a, 0xc0, 0xa1, 0x39, 0x96, 0xb3, 0x1c, 0xee, 0x71, 0x39, 0xeb, 0xa1, 0x9a, 0xa5, 0x21,
	0x59, 0x83, 0x46, 0x28, 0x3c, 0x1e, 0xd1, 0xe1, 0xa0, 0x36, 0x6c, 0x58, 0x0a, 0x90, 0x27, 0xd2,
	0x2a, 0x66, 0x11, 0x7d, 0x7f, 0x50, 0x1b, 0xb6, 0x77, 0xb7, 0x76, 0xae, 0x55, 0xc3, 0x8e, 0x8c,
	0xf9, 0xa5, 0x08, 0x65, 0x41, 0x58, 0xca, 0x99, 0x3c, 0x96, 0xbb, 0x5c, 0xb8, 0x36, 0x8f, 0xe8,
	0x36, 0xce, 0xbb, 0x57, 0x32, 0x6f, 0x84, 0x1e, 0x56, 0xea, 0x29, 0x53, 0x31, 0x96, 0xfc, 0x46,
	0xf4, 0x83, 0x41, 0x4d, 0x16, 0x8f, 0x42, 0xe6, 0x77, 0x4b, 0xb0, 0xfa, 0x1c, 0x8f, 0x86, 0x5b,
	0xf0, 0x2f, 0x13, 0x1e, 0xc5, 0x64, 0x13, 0x5a, 0x97, 0x22, 0x3c, 0x8f, 0x02, 0x66, 0x73, 0x6a,
	0x20, 0x8f, 0x99, 0xe1, 0x1f, 0x29, 0xc4, 0xbf, 0xa1, 0xcc, 0xcc, 0x97, 0xd0, 0xfb, 0x9c, 0xc7,
	0x7f, 0x98, 0x07, 0xf3, 0x47, 0x03, 0x96, 0x15, 0xff, 0x37, 0x5c, 0x60, 0x84, 0x5d, 0x9e, 0x2e,
	0x30, 0x92, 0x81, 0x07, 0x1e, 0x8b, 0x25, 0x01, 0xb8, 0x74, 0xc3, 0x9a, 0x63, 0x59, 0x49, 0x31,
	0x76, 0x81, 0x62, 0x59, 0x01, 0xb2, 0x0b, 0x6b, 0xbe, 0x88, 0xdd, 0x89, 0x6b, 0x23, 0x63, 0x6a,
	0xf7, 0xbd, 0x91, 0x26, 0xbc, 0x74, 0xcc, 0xfc, 0xb5, 0x06, 0xed, 0x5c, 0x79, 0xc9, 0x68, 0x64,
	0x81, 0xed, 0x8d, 0x74, 0xa0, 0x1a, 0xe5, 0xa2, 0x5c, 0x2a, 0x44, 0x99, 0xa6, 0xbb, 0x56, 0x9e,
	0x6e, 0x6b, 0x9f, 0xd6, 0x8b, 0xe9, 0xb6, 0xf6, 0x17, 0xd3, 0x6d, 0xed, 0xd3, 0xc6, 0xf5, 0x74,
	0x5b, 0xfb, 0x85, 0x74, 0x2f, 0x2f, 0xa4, 0xfb, 0x11, 0xd4, 0xe3, 0xab, 0x80, 0xd3, 0x95, 0x81,
	0x31, 0xec, 0xed, 0xde, 0xaf, 0x68, 0x9a, 0xe3, 0xab, 0x80, 0x5b, 0xe8, 0x28, 0xe5, 0x43, 0x36,
	0xb7, 0x56, 0x5e, 0xda, 0x54, 0xf2, 0x91, 0x33, 0x91, 0x1d, 0x20, 0x39, 0x78, 0x12, 0x38, 0xd8,
	0xf9, 0x2d, 0xec, 0xe1, 0x92, 0x11, 0x94, 0x07, 0xe6, 0xef, 0xf3, 0x49, 0x4c, 0x01, 0x0b, 0x2b,
	0x85, 0x79, 0xe1, 0x68, 0x57, 0x0b, 0x47, 0x67, 0x41, 0x38, 0x9e, 0x40, 0x43, 0x92, 0x1a, 0xd1,
	0x6e, 0xa5, 0x10, 0xc8, 0x14, 0xbd, 0x14, 0xa1, 0x3c, 0x9a, 0xa5, 0x9c, 0xc9, 0xff, 0xa1, 0x1b,
	0x26, 0x27, 0x39, 0x79, 0xee, 0xe1, 0xb2, 0x45, 0xa3, 0xf9, 0xcb, 0x12, 0xb4, 0x73, 0x93, 0xff,
	0x35, 0x69, 0xce, 0x77, 0xef, 0xca, 0x42, 0xf7, 0x2e, 0x4a, 0x78, 0xf3, 0xcd, 0x12, 0xde, 0xaa,
	0xce, 0x04, 0x2c, 0x64, 0x62, 0x13, 0x5a, 0x61, 0x32, 0x72, 0xa3, 0xc0, 0x63, 0x57, 0x98, 0xc1,
	0xa6, 0x95, 0x19, 0xcc, 0x6f, 0x97, 0xa1, 0x8e, 0x24, 0xbe, 0xb9, 0xaf, 0x4b, 0x6e, 0xee, 0x50,
	0xdd, 0x49, 0x9d, 0x1c, 0xe5, 0xf9, 0x1b, 0xbd, 0x5b, 0x2a, 0xa4, 0xbd, 0x4a, 0x21, 0xbd, 0x7d,
	0x03, 0x21, 0xed, 0x57, 0x09, 0xe9, 0xc1, 0x82, 0x90, 0xa6, 0x98, 0x3c, 0x81, 0xf5, 0xa7, 0x17,
	0xcc, 0xf5, 0xd8, 0xd8, 0xe3, 0xba, 0xe2, 0x65, 0x1b, 0x45, 0xa8, 0xab, 0x2d, 0xab, 0x7c, 0x70,
	0xde, 0x8f, 0x77, 0x6e, 0xda, 0x8f, 0x26, 0x74, 0x4e, 0xf9, 0x78, 0x2a, 0xc4, 0xb9, 0xba, 0xcf,
	0x95, 0x06, 0x17, 0x6c, 0x8b, 0x3d, 0xbb, 0x7e, 0xd3, 0x9e, 0xbd, 0x5b, 0xd9, 0xb3, 0x26, 0x74,
	0x66, 0xca, 0xa2, 0x9a, 0x45, 0x5f, 0xfb, 0x79, 0x1b, 0xf9, 0x10, 0xee, 0xe4, 0xa5, 0xf2, 0x58,
	0x04, 0xae, 0xbd, 0xe7, 0x50, 0x8a, 0xbb, 0x97, 0x0d, 0xe5, 0x95, 0xe0, 0x5e, 0x51, 0x09, 0x3e,
	0x03, 0x88, 0x02, 0xce, 0xed, 0xe9, 0x81, 0x70, 0x38, 0xdd, 0x40, 0x72, 0xfe, 0x5b, 0x42, 0xce,
	0xeb, 0xb9, 0x93, 0x95, 0x9b, 0x90, 0x2f, 0xdf, 0xad, 0xea, 0xf2, 0x7d, 0x50, 0xfd, 0x02, 0x19,
	0x14, 0x5f, 0x20, 0x73, 0x89, 0x19, 0xbe, 0x8d, 0xc4, 0x50, 0x58, 0x51, 0x35, 0xa9, 0xde, 0x28,
	0x2d, 0x2b, 0x85, 0xe6, 0x0f, 0x86, 0x2c, 0x24, 0xe4, 0x2e, 0x92, 0x21, 0x31, 0xcf, 0x53, 0xbc,
	0x1a, 0x2a, 0xa4, 0x14, 0xcb, 0x0b, 0xcb, 0x73, 0x67, 0x6e, 0x8c, 0xb2, 0xd2, 0xb0, 0x14, 0x90,
	0xa5, 0x2f, 0x26, 0x93, 0x88, 0xc7, 0xa8, 0x2b, 0x0d, 0x4b, 0x23, 0xe9, 0x2d, 0x42, 0x87, 0x87,
	0x5a, 0x54, 0x14, 0x20, 0x1f, 0x49, 0x9d, 0x50, 0x7b, 0xd1, 0x06, 0xc6, 0xbf, 0x51, 0x12, 0xbf,
	0x0e, 0xc7, 0x9a, 0xfb, 0x9a, 0xdf, 0xd7, 0x60, 0x25, 0xad, 0x97, 0x37, 0xb7, 0xec, 0x06, 0x34,
	0xb9, 0xef, 0x04, 0xc2, 0xf5, 0x63, 0xad, 0x7f, 0x73, 0x2c, 0x75, 0x96, 0x25, 0xf1, 0x54, 0x84,
	0xee, 0xd7, 0x98, 0x7b, 0x2d, 0x85, 0x45, 0x63, 0x9e, 0xaa, 0x7a, 0x81, 0xaa, 0x5c, 0xfb, 0xb7,
	0x2b, 0xda, 0xff, 0xda, 0x3b, 0x0a, 0x1b, 0x4a, 0xbf, 0xa3, 0xb0, 0x67, 0x36, 0xa1, 0xc5, 0x2f,
	0xb8, 0x1f, 0x1f, 0x66, 0xba, 0x90, 0x19, 0xc8, 0xa7, 0xb0, 0x12, 0xb0, 0x2b, 0x4f, 0x30, 0x07,
	0x95, 0xa1, 0xbd, 0xfb, 0xb0, 0x9a, 0x9e, 0x57, 0xca, 0xd1, 0x4a, 0x67, 0xc8, 0xed, 0xe4, 0x73,
	0x14, 0xf5, 0xa2, 0x61, 0xe1, 0xf7, 0xb5, 0x16, 0x5d, 0x2d, 0x69, 0xd1, 0x77, 0xaa, 0x50, 0xf3,
	0x67, 0x03, 0x7a, 0xc5, 0x48, 0xf0, 0xbc, 0xfc, 0xab, 0x58, 0x27, 0x05, 0xbf, 0xa5, 0x6d, 0xe6,
	0xce, 0xb8, 0x66, 0x0c, 0xbf, 0xe5, 0xb2, 0x13, 0xd7, 0xe3, 0x28, 0x8d, 0x8a, 0xb1, 0x39, 0x96,
	0xfc, 0x44, 0x22, 0x09, 0x6d, 0x54, 0x47, 0x45, 0x5c, 0x66, 0x90, 0xc7, 0x89, 0xa7, 0xc9, 0x6c,
	0xec, 0x33, 0xd7, 0xcb, 0xde, 0xa1, 0x05, 0x9b, 0xac, 0xbc, 0x4b, 0xd7, 0x89, 0xa7, 0xc8, 0x60,
	0xc3, 0x52, 0x40, 0xe6, 0x68, 0xca, 0xdd, 0xb3, 0x69, 0xac, 0xe9, 0xd1, 0xc8, 0xfc, 0x1f, 0xac,
	0xe0, 0xef, 0xc4, 0x08, 0x7b, 0x44, 0x5d, 0xa1, 0x11, 0x35, 0x54, 0xe2, 0x35, 0x94, 0x4e, 0x27,
	0x78, 0x89, 0x66, 0x8d, 0x94, 0x39, 0x69, 0xa8, 0x56, 0xf2, 0xf8, 0x7c, 0x25, 0xfc, 0x44, 0xa7,
	0x86, 0x95, 0x42, 0xf3, 0x13, 0x68, 0xe2, 0xbb, 0x54, 0xe6, 0xa6, 0xea, 0xd5, 0x88, 0x65, 0x26,
	0xdd, 0xf5, 0x9b, 0x51, 0x23, 0xd3, 0x87, 0xf5, 0xdc, 0x0b, 0x5f, 0x78, 0xfc, 0x66, 0xaf, 0xdb,
	0x8f, 0xa1, 0x99, 0xe8, 0x09, 0xb8, 0x51, 0xbb, 0x54, 0xda, 0xe7, 0x6b, 0xce, 0x9d, 0xcd, 0xd7,
	0x70, 0x5f, 0x3f, 0xa3, 0xf7, 0x46, 0xd1, 0xd1, 0xe4, 0xed, 0x76, 0xad, 0x3a, 0x84, 0x5a, 0x54,
	0x13, 0xf5, 0x0e, 0x8b, 0x96, 0x31, 0x66, 0x5e, 0x40, 0x53, 0x26, 0x71, 0xe1, 0xf5, 0xdb, 0xae,
	0x78, 0x16, 0x75, 0x0a, 0x6c, 0x2f, 0xfc, 0x19, 0x77, 0x31, 0xda, 0xc2, 0x9f, 0xb1, 0xd4, 0x62,
	0xfd, 0x90, 0xe8, 0xa9, 0xab, 0x41, 0x43, 0xf3, 0x1b, 0x23, 0x4d, 0x49, 0xba, 0xfd, 0x5b, 0x90,
	0x53, 0x12, 0x63, 0xae, 0xb8, 0x3a, 0x85, 0xe2, 0xca, 0xc7, 0xd0, 0x2d, 0xc6, 0x30, 0x2b, 0x66,
	0xe9, 0x4f, 0x0b, 0x24, 0x2d, 0xe0, 0x4e, 0xb1, 0x80, 0xcf, 0x60, 0x7d, 0x84, 0x37, 0xd1, 0x5f,
	0x7c, 0xe2, 0x6d, 0x47, 0xe5, 0x54, 0x3e, 0x37, 0x48, 0x13, 0xea, 0x87, 0x47, 0x87, 0x2f, 0xfa,
	0xb7, 0x48, 0x07, 0x9a, 0x47, 0x3e, 0x3f, 0xf2, 0x8f, 0x7c, 0xde, 0x37, 0xc8, 0x6d, 0x68, 0xbf,
	0x0a, 0xdd, 0x0b, 0xcd, 0x7f, 0x7f, 0x89, 0xf4, 0x00, 0x5e, 0xe1, 0x3f, 0x23, 0xe2, 0x9a, 0xc4,
	0x87, 0x22, 0x96, 0x3f, 0xd0, 0x12, 0xd7, 0xe5, 0x84, 0x74, 0xd1, 0x17, 0xbe, 0xd3, 0x6f, 0x6c,
	0xff, 0x64, 0x00, 0x64, 0x17, 0x37, 0x21, 0xd0, 0xcb, 0xd0, 0xa1, 0xf0, 0x79, 0xff, 0x16, 0xd9,
	0x04, 0x9a, 0xd9, 0x4e, 0xd9, 0x39, 0x4f, 0x82, 0x53, 0x3e, 0x3e, 0x16, 0xa7, 0x7c, 0xdc, 0x37,
	0xc8, 0x16, 0x6c, 0x94, 0x8e, 0x3e, 0xf7, 0x44, 0xe2, 0xf4, 0x97, 0xc8, 0x00, 0x36, 0x17, 0xc7,
	0x71, 0x28, 0xf5, 0xa8, 0x91, 0x35, 0xe8, 0x67, 0x1e, 0x4f, 0xbd, 0x4b, 0x76, 0x15, 0xf5, 0xeb,
	0x45, 0xeb, 0x01, 0xf3, 0x13, 0xe6, 0xf5, 0x1b, 0x64, 0x15, 0xba, 0x99, 0x55, 0x9e, 0x60, 0xf9,
	0xd9, 0xd6, 0x17, 0x9b, 0x67, 0x6e, 0x3c, 0x4d, 0xc6, 0x3b, 0xb6, 0x98, 0x3d, 0x4a, 0x1b, 0xfb,
	0x51, 0xda, 0xd8, 0xe3, 0x65, 0xfc, 0x7a, 0xfc, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0xc2,
	0x3c, 0x69, 0xb5, 0x12, 0x00, 0x00,
}
