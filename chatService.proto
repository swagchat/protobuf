syntax = "proto3";

package swagchat.protobuf;
option go_package = "github.com/swagchat/protobuf";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "chatMessage.proto";

service  ChatIncoming {
  rpc PostMessage (Message) returns (google.protobuf.Empty) {}
}

service ChatOutgoing {
  rpc PostWebhookRoom (Room) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/webhooks/room"
      body: "*"
    };
  }
  rpc PostWebhookMessage (Message) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/webhooks/message"
      body: "*"
    };
  }
}

service UserRoleService {
  rpc PostUserRole (UserRole) returns (UserRole) {
    option (google.api.http) = {
      post: "/userRoles"
      body: "*"
    };
  }

  rpc GetRoleIDsOfUserRole (GetRoleIDsOfUserRoleReq) returns (RoleIDs) {
    option (google.api.http) = {
      get: "/userRoles/roles"
    };
  }
  
  rpc GetUserIDsOfUserRole (GetUserIDsOfUserRoleReq) returns (UserIDs) {
    option (google.api.http) = {
      get: "/userRoles/users"
    };
  }

  rpc DeleteUserRole (UserRole) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/userRoles"
    };
  }
}

service RoomUserService {
  rpc PostRoomUser (PostRoomUserReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/roomUsers"
      body: "*"
    };
  }

  // rpc GetRoleIDsOfRoomUser (GetRoomIDsOfRoomUserReq) returns (RoleIDs) {
  //   option (google.api.http) = {
  //     get: "/roomUsers/roles"
  //   };
  // }
  
  // rpc GetUserIDsOfRoomUser (GetUserIDsOfRoomUserReq) returns (UserIDs) {
  //   option (google.api.http) = {
  //     get: "/roomUsers/users"
  //   };
  // }

  rpc DeleteRoomUser (DeleteRoomUserReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/roomUsers"
    };
  }
}