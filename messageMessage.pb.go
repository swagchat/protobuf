// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: messageMessage.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	messageMessage.proto
	messageService.proto
	deviceMessage.proto
	commonMessage.proto
	roomMessage.proto
	roomService.proto
	roomUserMessage.proto
	roomUserService.proto
	userMessage.proto
	userService.proto
	userRoleMessage.proto
	userRoleService.proto
	webhookService.proto

It has these top-level messages:
	Messages
	Message
	MessagePayload
	Device
	RoomIds
	UserIds
	RoleIds
	ErrorResponse
	InvalidParam
	Room
	UserForRoom
	CreateRoomRequest
	RoomUser
	CreateRoomUsersRequest
	UpdateRoomUserRequest
	GetUserIdsOfRoomUserRequest
	DeleteRoomUsersRequest
	User
	RoomForUser
	CreateUserRequest
	GetUsersRequest
	UsersResponse
	GetUserRequest
	UpdateUserRequest
	DeleteUserRequest
	GetContactsRequest
	GetProfileRequest
	UserRole
	CreateUserRolesRequest
	GetUserIdsOfUserRoleRequest
	GetRoleIdsOfUserRoleRequest
	DeleteUserRolesRequest
*/
package protobuf

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Messages struct {
	Messages []*Message `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
	AllCount *int64     `protobuf:"varint,2,opt,name=allCount" json:"allCount,omitempty"`
	Limit    *int32     `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset   *int32     `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Order    *string    `protobuf:"bytes,5,opt,name=order" json:"order,omitempty"`
}

func (m *Messages) Reset()                    { *m = Messages{} }
func (m *Messages) String() string            { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()               {}
func (*Messages) Descriptor() ([]byte, []int) { return fileDescriptorMessageMessage, []int{0} }

func (m *Messages) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *Messages) GetAllCount() int64 {
	if m != nil && m.AllCount != nil {
		return *m.AllCount
	}
	return 0
}

func (m *Messages) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *Messages) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *Messages) GetOrder() string {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return ""
}

type Message struct {
	ID        uint64         `protobuf:"varint,11,opt,name=id" json:"-" db:"id"`
	MessageID string         `protobuf:"bytes,12,opt,name=message_id,json=messageId" json:"messageId" db:"message_id"`
	RoomID    string         `protobuf:"bytes,13,opt,name=room_id,json=roomId" json:"roomId" db:"room_id"`
	UserID    string         `protobuf:"bytes,14,opt,name=user_id,json=userId" json:"userId" db:"user_id"`
	Type      string         `protobuf:"bytes,15,opt,name=type" json:"type" db:"type"`
	Payload   MessagePayload `protobuf:"bytes,16,opt,name=payload" json:"payload" db:"payload"`
	Role      int32          `protobuf:"varint,17,opt,name=role" json:"role" db:"role"`
	Created   int64          `protobuf:"varint,30,opt,name=created" json:"created" db:"created"`
	Modified  int64          `protobuf:"varint,31,opt,name=modified" json:"modified" db:"modified"`
	EventName string         `protobuf:"bytes,41,opt,name=event_name,json=eventName" json:"eventName" db:"-"`
	UserIDs   []string       `protobuf:"bytes,42,rep,name=user_ids,json=userIds" json:"userIds" db:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptorMessageMessage, []int{1} }

func (m *Message) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Message) GetMessageID() string {
	if m != nil {
		return m.MessageID
	}
	return ""
}

func (m *Message) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *Message) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetPayload() MessagePayload {
	if m != nil {
		return m.Payload
	}
	return MessagePayload{}
}

func (m *Message) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *Message) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Message) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *Message) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Message) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

type MessagePayload struct {
	// text
	Text string `protobuf:"bytes,1,opt,name=text" json:"text"`
	// image
	Mime         string `protobuf:"bytes,11,opt,name=mime" json:"mime"`
	Filename     string `protobuf:"bytes,12,opt,name=filename" json:"filename"`
	SourceUrl    string `protobuf:"bytes,13,opt,name=sourceUrl" json:"sourceUrl"`
	ThumbnailUrl string `protobuf:"bytes,14,opt,name=thumbnailUrl" json:"thumbnailUrl"`
	Width        int32  `protobuf:"varint,15,opt,name=width" json:"width"`
	Height       int32  `protobuf:"varint,16,opt,name=height" json:"height"`
}

func (m *MessagePayload) Reset()                    { *m = MessagePayload{} }
func (m *MessagePayload) String() string            { return proto.CompactTextString(m) }
func (*MessagePayload) ProtoMessage()               {}
func (*MessagePayload) Descriptor() ([]byte, []int) { return fileDescriptorMessageMessage, []int{2} }

func (m *MessagePayload) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MessagePayload) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *MessagePayload) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *MessagePayload) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func (m *MessagePayload) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *MessagePayload) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *MessagePayload) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*Messages)(nil), "swagchat.protobuf.Messages")
	proto.RegisterType((*Message)(nil), "swagchat.protobuf.Message")
	proto.RegisterType((*MessagePayload)(nil), "swagchat.protobuf.MessagePayload")
}

func init() { proto.RegisterFile("messageMessage.proto", fileDescriptorMessageMessage) }

var fileDescriptorMessageMessage = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xbb, 0x6e, 0xdb, 0x3c,
	0x14, 0xc7, 0x23, 0xdf, 0x64, 0x9f, 0x38, 0xc9, 0x17, 0xc2, 0x5f, 0x41, 0xb8, 0x41, 0xa4, 0x12,
	0x28, 0xa0, 0x06, 0x88, 0x83, 0x64, 0xe8, 0x90, 0x4e, 0x75, 0xbb, 0x64, 0x68, 0x91, 0x12, 0xc8,
	0xd2, 0x25, 0x90, 0x2d, 0xda, 0x26, 0x20, 0x99, 0x81, 0x44, 0x37, 0xcd, 0x5b, 0xf4, 0x15, 0xba,
	0xf5, 0x51, 0x3a, 0xf6, 0x09, 0x34, 0x64, 0xcc, 0x68, 0xf4, 0x01, 0x0a, 0x92, 0x47, 0xbe, 0xa0,
	0xe8, 0x64, 0xf3, 0x7f, 0xf9, 0x91, 0x22, 0x0f, 0xf4, 0x32, 0x51, 0x14, 0xf1, 0x54, 0x7c, 0x70,
	0x3f, 0x83, 0xbb, 0x5c, 0x69, 0x45, 0x0e, 0x8b, 0xfb, 0x78, 0x3a, 0x9e, 0xc5, 0xda, 0xad, 0x47,
	0x8b, 0x49, 0xbf, 0x37, 0x55, 0x53, 0x65, 0x57, 0x67, 0xe6, 0x9f, 0x33, 0xd8, 0x0f, 0x0f, 0xda,
	0x58, 0x2d, 0xc8, 0x6b, 0x68, 0x23, 0xad, 0xa0, 0x5e, 0x58, 0x8f, 0x76, 0x2f, 0xfa, 0x83, 0xbf,
	0x40, 0x03, 0x8c, 0xf3, 0x55, 0x96, 0xf4, 0xa1, 0x1d, 0xa7, 0xe9, 0x3b, 0xb5, 0x98, 0x6b, 0x5a,
	0x0b, 0xbd, 0xa8, 0xce, 0x57, 0x6b, 0xd2, 0x83, 0x66, 0x2a, 0x33, 0xa9, 0x69, 0x3d, 0xf4, 0xa2,
	0x26, 0x77, 0x0b, 0xf2, 0x0c, 0x5a, 0x6a, 0x32, 0x29, 0x84, 0xa6, 0x0d, 0x2b, 0xe3, 0xca, 0xa4,
	0x55, 0x9e, 0x88, 0x9c, 0x36, 0x43, 0x2f, 0xea, 0x70, 0xb7, 0xb8, 0x6c, 0xfc, 0xfa, 0x1e, 0xec,
	0xb0, 0x6f, 0x4d, 0xf0, 0x71, 0x6f, 0x72, 0x02, 0x35, 0x99, 0xd0, 0xdd, 0xd0, 0x8b, 0x1a, 0xc3,
	0xfe, 0xcf, 0x32, 0xd8, 0x79, 0x2c, 0x83, 0xda, 0xd5, 0xfb, 0xa7, 0x32, 0xf0, 0x4e, 0x97, 0x65,
	0xe0, 0x27, 0xa3, 0x4b, 0x26, 0x13, 0xc6, 0x6b, 0x32, 0x21, 0xd7, 0x00, 0x78, 0xd2, 0x5b, 0x99,
	0xd0, 0xae, 0x01, 0x0f, 0xcf, 0xb1, 0xd3, 0x41, 0xa0, 0xad, 0x76, 0x30, 0x76, 0x95, 0x2c, 0xcb,
	0xe0, 0xc0, 0x20, 0xd6, 0x3d, 0xc6, 0xd7, 0x2e, 0x79, 0x0b, 0x7e, 0xae, 0x54, 0x66, 0x70, 0x7b,
	0x16, 0x17, 0x21, 0xae, 0xc5, 0x95, 0xca, 0x2c, 0xab, 0x65, 0x02, 0x16, 0xd4, 0x35, 0x20, 0x8c,
	0x33, 0x8e, 0xba, 0x41, 0x2c, 0x0a, 0x91, 0x1b, 0xc4, 0xfe, 0x36, 0xe2, 0xa6, 0x10, 0xb9, 0x43,
	0x98, 0xc0, 0x1a, 0x81, 0x71, 0xc6, 0x51, 0x27, 0x2f, 0xa1, 0xa1, 0x1f, 0xee, 0x04, 0x3d, 0xb0,
	0xfd, 0x43, 0xd3, 0x5f, 0x96, 0x41, 0xc7, 0x64, 0x8d, 0xce, 0xb8, 0xb5, 0xc9, 0x27, 0xf0, 0xef,
	0xe2, 0x87, 0x54, 0xc5, 0x09, 0xfd, 0x2f, 0xf4, 0xa2, 0xdd, 0x8b, 0x17, 0xff, 0x7e, 0xd3, 0x6b,
	0x17, 0x1c, 0xf6, 0x10, 0x66, 0x37, 0xc6, 0x36, 0xe3, 0x15, 0xc7, 0xec, 0x9c, 0xab, 0x54, 0xd0,
	0x43, 0xf3, 0x76, 0xdb, 0x3b, 0x1b, 0x9d, 0x71, 0x6b, 0x93, 0x01, 0xf8, 0xe3, 0x5c, 0xc4, 0x5a,
	0x24, 0xf4, 0xd8, 0x4c, 0xc5, 0x36, 0x16, 0x2d, 0xc6, 0xab, 0x10, 0x39, 0x87, 0x76, 0xa6, 0x12,
	0x39, 0x91, 0x22, 0xa1, 0x81, 0x2d, 0xfc, 0x8f, 0x85, 0x3d, 0xfb, 0x18, 0xe8, 0x31, 0xbe, 0x8a,
	0x91, 0x4b, 0x00, 0xf1, 0x45, 0xcc, 0xf5, 0xed, 0x3c, 0xce, 0x04, 0x7d, 0x65, 0x6f, 0xe2, 0xb9,
	0x29, 0x99, 0xe7, 0xb4, 0xce, 0xc7, 0x38, 0x13, 0xcb, 0x32, 0x68, 0x19, 0xc2, 0x29, 0xe3, 0x6b,
	0x91, 0xbc, 0x81, 0x36, 0xde, 0x69, 0x41, 0x4f, 0xc2, 0x7a, 0xd4, 0x19, 0x86, 0x8f, 0x65, 0xe0,
	0xbb, 0xfb, 0x2f, 0x9e, 0xca, 0xc0, 0x77, 0x17, 0x5d, 0x6c, 0xd4, 0x2b, 0x09, 0x47, 0xf2, 0xb7,
	0x07, 0xfb, 0xdb, 0x57, 0x47, 0x28, 0x34, 0xb4, 0xf8, 0xaa, 0xa9, 0x67, 0xcf, 0xd2, 0x30, 0x67,
	0xe1, 0x56, 0x31, 0x4e, 0x26, 0x33, 0x61, 0xa7, 0x76, 0xe5, 0x18, 0x85, 0x84, 0xd0, 0x9e, 0xc8,
	0x54, 0xd8, 0x6f, 0xe8, 0x6e, 0xb8, 0x2b, 0x95, 0x30, 0xe8, 0x14, 0x6a, 0x91, 0x8f, 0xc5, 0x4d,
	0x9e, 0xe2, 0xcc, 0xb9, 0xc8, 0x5a, 0x26, 0x11, 0x74, 0xf5, 0x6c, 0x91, 0x8d, 0xe6, 0xb1, 0x4c,
	0x4d, 0x6c, 0x7f, 0x23, 0xb6, 0xe5, 0x90, 0x3e, 0x34, 0xef, 0x65, 0xa2, 0x67, 0x76, 0x74, 0x9a,
	0x18, 0x71, 0x12, 0x39, 0x82, 0xd6, 0x4c, 0xc8, 0xe9, 0x4c, 0xdb, 0x69, 0xa9, 0x4c, 0xd4, 0xdc,
	0x67, 0x0f, 0x8f, 0x3f, 0x1f, 0x4d, 0xa5, 0x9e, 0x2d, 0x46, 0x83, 0xb1, 0xca, 0xce, 0xaa, 0x69,
	0x3a, 0xab, 0xa6, 0xe9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0xa0, 0x78, 0x26, 0x94, 0x04,
	0x00, 0x00,
}
