/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('./gogoproto/gogo_pb.js');
var deviceMessage_pb = require('./deviceMessage_pb.js');
var roomMessage_pb = require('./roomMessage_pb.js');
var commonMessage_pb = require('./commonMessage_pb.js');
goog.exportSymbol('proto.swagchat.protobuf.CreateUserRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.DeleteUserRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.MiniRoom', null, global);
goog.exportSymbol('proto.swagchat.protobuf.PublicProfileScope', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RetrieveContactsRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RetrieveProfileRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RetrieveRoleUsersRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RetrieveUserRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RetrieveUserRoomsRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RetrieveUsersRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RoleUsersResponse', null, global);
goog.exportSymbol('proto.swagchat.protobuf.UpdateUserRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.User', null, global);
goog.exportSymbol('proto.swagchat.protobuf.UserRoomsFilter', null, global);
goog.exportSymbol('proto.swagchat.protobuf.UserRoomsResponse', null, global);
goog.exportSymbol('proto.swagchat.protobuf.UsersResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.User.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.User.displayName = 'proto.swagchat.protobuf.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.User.repeatedFields_ = [40,41,42];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.User.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    userId: jspb.Message.getField(msg, 12),
    name: jspb.Message.getField(msg, 13),
    pictureUrl: jspb.Message.getField(msg, 14),
    informationUrl: jspb.Message.getField(msg, 15),
    unreadCount: jspb.Message.getField(msg, 16),
    metaData: msg.getMetaData_asB64(),
    publicProfileScope: jspb.Message.getField(msg, 18),
    canBlock: jspb.Message.getField(msg, 19),
    lang: jspb.Message.getField(msg, 20),
    accessToken: jspb.Message.getField(msg, 21),
    lastAccessRoomId: jspb.Message.getField(msg, 22),
    lastAccessedTimestamp: jspb.Message.getField(msg, 23),
    lastAccessed: jspb.Message.getField(msg, 24),
    createdTimestamp: jspb.Message.getField(msg, 31),
    created: jspb.Message.getField(msg, 32),
    modifiedTimestamp: jspb.Message.getField(msg, 33),
    modified: jspb.Message.getField(msg, 34),
    deletedTimestamp: jspb.Message.getField(msg, 35),
    blockUsersList: jspb.Message.getRepeatedField(msg, 40),
    devicesList: jspb.Message.toObjectList(msg.getDevicesList(),
    deviceMessage_pb.Device.toObject, includeInstance),
    rolesList: jspb.Message.getRepeatedField(msg, 42)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.User}
 */
proto.swagchat.protobuf.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.User;
  return proto.swagchat.protobuf.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.User}
 */
proto.swagchat.protobuf.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnreadCount(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 18:
      var value = /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (reader.readEnum());
      msg.setPublicProfileScope(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanBlock(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastAccessRoomId(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastAccessedTimestamp(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastAccessed(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedTimestamp(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModifiedTimestamp(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setModified(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletedTimestamp(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockUsers(value);
      break;
    case 41:
      var value = new deviceMessage_pb.Device;
      reader.readMessage(value,deviceMessage_pb.Device.deserializeBinaryFromReader);
      msg.addDevices(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeString(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeString(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeInt64(
      35,
      f
    );
  }
  f = message.getBlockUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      40,
      f
    );
  }
  f = message.getDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      41,
      f,
      deviceMessage_pb.Device.serializeBinaryToWriter
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      42,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.swagchat.protobuf.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.User.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.swagchat.protobuf.User.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 12;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.User.prototype.clearUserId = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string name = 13;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setName = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.User.prototype.clearName = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasName = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string picture_url = 14;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.User.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string information_url = 15;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.User.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 unread_count = 16;
 * @return {number}
 */
proto.swagchat.protobuf.User.prototype.getUnreadCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.User.prototype.setUnreadCount = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.User.prototype.clearUnreadCount = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasUnreadCount = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bytes meta_data = 17;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.User.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes meta_data = 17;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.User.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.User.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.User.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional PublicProfileScope public_profile_scope = 18;
 * @return {!proto.swagchat.protobuf.PublicProfileScope}
 */
proto.swagchat.protobuf.User.prototype.getPublicProfileScope = function() {
  return /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {!proto.swagchat.protobuf.PublicProfileScope} value */
proto.swagchat.protobuf.User.prototype.setPublicProfileScope = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.User.prototype.clearPublicProfileScope = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasPublicProfileScope = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool can_block = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.User.prototype.getCanBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.User.prototype.setCanBlock = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.swagchat.protobuf.User.prototype.clearCanBlock = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasCanBlock = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string lang = 20;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setLang = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.swagchat.protobuf.User.prototype.clearLang = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasLang = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string access_token = 21;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setAccessToken = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.swagchat.protobuf.User.prototype.clearAccessToken = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasAccessToken = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string last_access_room_id = 22;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getLastAccessRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setLastAccessRoomId = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.swagchat.protobuf.User.prototype.clearLastAccessRoomId = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasLastAccessRoomId = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional int64 last_accessed_timestamp = 23;
 * @return {number}
 */
proto.swagchat.protobuf.User.prototype.getLastAccessedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.User.prototype.setLastAccessedTimestamp = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.swagchat.protobuf.User.prototype.clearLastAccessedTimestamp = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasLastAccessedTimestamp = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string last_accessed = 24;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getLastAccessed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setLastAccessed = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.swagchat.protobuf.User.prototype.clearLastAccessed = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasLastAccessed = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int64 created_timestamp = 31;
 * @return {number}
 */
proto.swagchat.protobuf.User.prototype.getCreatedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.User.prototype.setCreatedTimestamp = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.swagchat.protobuf.User.prototype.clearCreatedTimestamp = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasCreatedTimestamp = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string created = 32;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setCreated = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.swagchat.protobuf.User.prototype.clearCreated = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional int64 modified_timestamp = 33;
 * @return {number}
 */
proto.swagchat.protobuf.User.prototype.getModifiedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.User.prototype.setModifiedTimestamp = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.swagchat.protobuf.User.prototype.clearModifiedTimestamp = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasModifiedTimestamp = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional string modified = 34;
 * @return {string}
 */
proto.swagchat.protobuf.User.prototype.getModified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.User.prototype.setModified = function(value) {
  jspb.Message.setField(this, 34, value);
};


proto.swagchat.protobuf.User.prototype.clearModified = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasModified = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional int64 deleted_timestamp = 35;
 * @return {number}
 */
proto.swagchat.protobuf.User.prototype.getDeletedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.User.prototype.setDeletedTimestamp = function(value) {
  jspb.Message.setField(this, 35, value);
};


proto.swagchat.protobuf.User.prototype.clearDeletedTimestamp = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.User.prototype.hasDeletedTimestamp = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * repeated string block_users = 40;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.User.prototype.getBlockUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 40));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.User.prototype.setBlockUsersList = function(value) {
  jspb.Message.setField(this, 40, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.User.prototype.addBlockUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 40, value, opt_index);
};


proto.swagchat.protobuf.User.prototype.clearBlockUsersList = function() {
  this.setBlockUsersList([]);
};


/**
 * repeated Device devices = 41;
 * @return {!Array.<!proto.swagchat.protobuf.Device>}
 */
proto.swagchat.protobuf.User.prototype.getDevicesList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, deviceMessage_pb.Device, 41));
};


/** @param {!Array.<!proto.swagchat.protobuf.Device>} value */
proto.swagchat.protobuf.User.prototype.setDevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 41, value);
};


/**
 * @param {!proto.swagchat.protobuf.Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.Device}
 */
proto.swagchat.protobuf.User.prototype.addDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 41, opt_value, proto.swagchat.protobuf.Device, opt_index);
};


proto.swagchat.protobuf.User.prototype.clearDevicesList = function() {
  this.setDevicesList([]);
};


/**
 * repeated int32 roles = 42;
 * @return {!Array.<number>}
 */
proto.swagchat.protobuf.User.prototype.getRolesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 42));
};


/** @param {!Array.<number>} value */
proto.swagchat.protobuf.User.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 42, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.User.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 42, value, opt_index);
};


proto.swagchat.protobuf.User.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.MiniRoom = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.MiniRoom.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.MiniRoom, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.MiniRoom.displayName = 'proto.swagchat.protobuf.MiniRoom';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.MiniRoom.repeatedFields_ = [30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.MiniRoom.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.MiniRoom.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.MiniRoom} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.MiniRoom.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getField(msg, 1),
    userId: jspb.Message.getField(msg, 2),
    name: jspb.Message.getField(msg, 3),
    pictureUrl: jspb.Message.getField(msg, 4),
    informationUrl: jspb.Message.getField(msg, 5),
    metaData: msg.getMetaData_asB64(),
    type: jspb.Message.getField(msg, 7),
    lastMessage: jspb.Message.getField(msg, 8),
    lastMessageUpdatedTimestamp: jspb.Message.getField(msg, 9),
    lastMessageUpdated: jspb.Message.getField(msg, 10),
    canLeft: jspb.Message.getField(msg, 11),
    createdTimestamp: jspb.Message.getField(msg, 21),
    created: jspb.Message.getField(msg, 22),
    modifiedTimestamp: jspb.Message.getField(msg, 23),
    modified: jspb.Message.getField(msg, 24),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    roomMessage_pb.MiniUser.toObject, includeInstance),
    ruUnreadCount: jspb.Message.getField(msg, 31)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.MiniRoom}
 */
proto.swagchat.protobuf.MiniRoom.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.MiniRoom;
  return proto.swagchat.protobuf.MiniRoom.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.MiniRoom} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.MiniRoom}
 */
proto.swagchat.protobuf.MiniRoom.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 7:
      var value = /** @type {!proto.swagchat.protobuf.RoomType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastMessage(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastMessageUpdatedTimestamp(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastMessageUpdated(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanLeft(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedTimestamp(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModifiedTimestamp(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setModified(value);
      break;
    case 30:
      var value = new roomMessage_pb.MiniUser;
      reader.readMessage(value,roomMessage_pb.MiniUser.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRuUnreadCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.MiniRoom.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.MiniRoom.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.MiniRoom} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.MiniRoom.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      30,
      f,
      roomMessage_pb.MiniUser.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt64(
      31,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearUserId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearName = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string picture_url = 4;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string information_url = 5;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes meta_data = 6;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes meta_data = 6;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.MiniRoom.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RoomType type = 7;
 * @return {!proto.swagchat.protobuf.RoomType}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getType = function() {
  return /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.swagchat.protobuf.RoomType} value */
proto.swagchat.protobuf.MiniRoom.prototype.setType = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearType = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasType = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string last_message = 8;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getLastMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setLastMessage = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearLastMessage = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasLastMessage = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 last_message_updated_timestamp = 9;
 * @return {number}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getLastMessageUpdatedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniRoom.prototype.setLastMessageUpdatedTimestamp = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearLastMessageUpdatedTimestamp = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasLastMessageUpdatedTimestamp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string last_message_updated = 10;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getLastMessageUpdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setLastMessageUpdated = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearLastMessageUpdated = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasLastMessageUpdated = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool can_left = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getCanLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.MiniRoom.prototype.setCanLeft = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearCanLeft = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasCanLeft = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 created_timestamp = 21;
 * @return {number}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getCreatedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniRoom.prototype.setCreatedTimestamp = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearCreatedTimestamp = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasCreatedTimestamp = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string created = 22;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setCreated = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearCreated = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional int64 modified_timestamp = 23;
 * @return {number}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getModifiedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniRoom.prototype.setModifiedTimestamp = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearModifiedTimestamp = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasModifiedTimestamp = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string modified = 24;
 * @return {string}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getModified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniRoom.prototype.setModified = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearModified = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasModified = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * repeated MiniUser users = 30;
 * @return {!Array.<!proto.swagchat.protobuf.MiniUser>}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.MiniUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, roomMessage_pb.MiniUser, 30));
};


/** @param {!Array.<!proto.swagchat.protobuf.MiniUser>} value */
proto.swagchat.protobuf.MiniRoom.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.swagchat.protobuf.MiniUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.MiniUser}
 */
proto.swagchat.protobuf.MiniRoom.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.swagchat.protobuf.MiniUser, opt_index);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional int64 ru_unread_count = 31;
 * @return {number}
 */
proto.swagchat.protobuf.MiniRoom.prototype.getRuUnreadCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniRoom.prototype.setRuUnreadCount = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.swagchat.protobuf.MiniRoom.prototype.clearRuUnreadCount = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniRoom.prototype.hasRuUnreadCount = function() {
  return jspb.Message.getField(this, 31) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.CreateUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.CreateUserRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.CreateUserRequest.displayName = 'proto.swagchat.protobuf.CreateUserRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.CreateUserRequest.repeatedFields_ = [19,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.CreateUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.CreateUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.CreateUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 11),
    name: jspb.Message.getField(msg, 12),
    pictureUrl: jspb.Message.getField(msg, 13),
    informationUrl: jspb.Message.getField(msg, 14),
    metaData: msg.getMetaData_asB64(),
    publicProfileScope: jspb.Message.getField(msg, 16),
    canBlock: jspb.Message.getField(msg, 17),
    lang: jspb.Message.getField(msg, 18),
    blockUsersList: jspb.Message.getRepeatedField(msg, 19),
    rolesList: jspb.Message.getRepeatedField(msg, 21)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.CreateUserRequest}
 */
proto.swagchat.protobuf.CreateUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.CreateUserRequest;
  return proto.swagchat.protobuf.CreateUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.CreateUserRequest}
 */
proto.swagchat.protobuf.CreateUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 16:
      var value = /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (reader.readEnum());
      msg.setPublicProfileScope(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanBlock(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockUsers(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.CreateUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.CreateUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getBlockUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      21,
      f
    );
  }
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string name = 12;
 * @return {string}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearName = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string picture_url = 13;
 * @return {string}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string information_url = 14;
 * @return {string}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes meta_data = 15;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes meta_data = 15;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional PublicProfileScope public_profile_scope = 16;
 * @return {!proto.swagchat.protobuf.PublicProfileScope}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getPublicProfileScope = function() {
  return /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {!proto.swagchat.protobuf.PublicProfileScope} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setPublicProfileScope = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearPublicProfileScope = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasPublicProfileScope = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool can_block = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getCanBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setCanBlock = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearCanBlock = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasCanBlock = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string lang = 18;
 * @return {string}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setLang = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearLang = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.hasLang = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated string block_users = 19;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getBlockUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setBlockUsersList = function(value) {
  jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.addBlockUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearBlockUsersList = function() {
  this.setBlockUsersList([]);
};


/**
 * repeated int32 roles = 21;
 * @return {!Array.<number>}
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.getRolesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array.<number>} value */
proto.swagchat.protobuf.CreateUserRequest.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.CreateUserRequest.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


proto.swagchat.protobuf.CreateUserRequest.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RetrieveUsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.RetrieveUsersRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.RetrieveUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RetrieveUsersRequest.displayName = 'proto.swagchat.protobuf.RetrieveUsersRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.RetrieveUsersRequest.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RetrieveUsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RetrieveUsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveUsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getField(msg, 11),
    offset: jspb.Message.getField(msg, 12),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RetrieveUsersRequest}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RetrieveUsersRequest;
  return proto.swagchat.protobuf.RetrieveUsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RetrieveUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RetrieveUsersRequest}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 13:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RetrieveUsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RetrieveUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveUsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 limit = 11;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.RetrieveUsersRequest.prototype.clearLimit = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 offset = 12;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.RetrieveUsersRequest.prototype.clearOffset = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated OrderInfo orders = 13;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 13));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.RetrieveUsersRequest.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.RetrieveUsersRequest.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.UsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.UsersResponse.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.UsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.UsersResponse.displayName = 'proto.swagchat.protobuf.UsersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.UsersResponse.repeatedFields_ = [1,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.UsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.UsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.UsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.swagchat.protobuf.User.toObject, includeInstance),
    allcount: jspb.Message.getField(msg, 2),
    limit: jspb.Message.getField(msg, 3),
    offset: jspb.Message.getField(msg, 4),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.UsersResponse}
 */
proto.swagchat.protobuf.UsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.UsersResponse;
  return proto.swagchat.protobuf.UsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.UsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.UsersResponse}
 */
proto.swagchat.protobuf.UsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.swagchat.protobuf.User;
      reader.readMessage(value,proto.swagchat.protobuf.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.UsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.UsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.UsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.swagchat.protobuf.User.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array.<!proto.swagchat.protobuf.User>}
 */
proto.swagchat.protobuf.UsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.swagchat.protobuf.User, 1));
};


/** @param {!Array.<!proto.swagchat.protobuf.User>} value */
proto.swagchat.protobuf.UsersResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.swagchat.protobuf.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.User}
 */
proto.swagchat.protobuf.UsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.swagchat.protobuf.User, opt_index);
};


proto.swagchat.protobuf.UsersResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional int64 allCount = 2;
 * @return {number}
 */
proto.swagchat.protobuf.UsersResponse.prototype.getAllcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UsersResponse.prototype.setAllcount = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.UsersResponse.prototype.clearAllcount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UsersResponse.prototype.hasAllcount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.swagchat.protobuf.UsersResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UsersResponse.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.UsersResponse.prototype.clearLimit = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UsersResponse.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.swagchat.protobuf.UsersResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UsersResponse.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.UsersResponse.prototype.clearOffset = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UsersResponse.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated OrderInfo orders = 5;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.UsersResponse.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 5));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.UsersResponse.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.UsersResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.UsersResponse.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RetrieveUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.RetrieveUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RetrieveUserRequest.displayName = 'proto.swagchat.protobuf.RetrieveUserRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RetrieveUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RetrieveUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RetrieveUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RetrieveUserRequest}
 */
proto.swagchat.protobuf.RetrieveUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RetrieveUserRequest;
  return proto.swagchat.protobuf.RetrieveUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RetrieveUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RetrieveUserRequest}
 */
proto.swagchat.protobuf.RetrieveUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RetrieveUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RetrieveUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RetrieveUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.RetrieveUserRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.RetrieveUserRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.RetrieveUserRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUserRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.UpdateUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.UpdateUserRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.UpdateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.UpdateUserRequest.displayName = 'proto.swagchat.protobuf.UpdateUserRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.UpdateUserRequest.repeatedFields_ = [21,23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.UpdateUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.UpdateUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UpdateUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 11),
    name: jspb.Message.getField(msg, 13),
    pictureUrl: jspb.Message.getField(msg, 14),
    informationUrl: jspb.Message.getField(msg, 15),
    unreadCount: jspb.Message.getField(msg, 16),
    metaData: msg.getMetaData_asB64(),
    publicProfileScope: jspb.Message.getField(msg, 18),
    canBlock: jspb.Message.getField(msg, 19),
    lang: jspb.Message.getField(msg, 20),
    blockUsersList: jspb.Message.getRepeatedField(msg, 21),
    rolesList: jspb.Message.getRepeatedField(msg, 23)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.UpdateUserRequest}
 */
proto.swagchat.protobuf.UpdateUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.UpdateUserRequest;
  return proto.swagchat.protobuf.UpdateUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.UpdateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.UpdateUserRequest}
 */
proto.swagchat.protobuf.UpdateUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnreadCount(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 18:
      var value = /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (reader.readEnum());
      msg.setPublicProfileScope(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanBlock(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockUsers(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.UpdateUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.UpdateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UpdateUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getBlockUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      23,
      f
    );
  }
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string name = 13;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearName = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string picture_url = 14;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string information_url = 15;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 unread_count = 16;
 * @return {number}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getUnreadCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setUnreadCount = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearUnreadCount = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasUnreadCount = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bytes meta_data = 17;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes meta_data = 17;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional PublicProfileScope public_profile_scope = 18;
 * @return {!proto.swagchat.protobuf.PublicProfileScope}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getPublicProfileScope = function() {
  return /** @type {!proto.swagchat.protobuf.PublicProfileScope} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {!proto.swagchat.protobuf.PublicProfileScope} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setPublicProfileScope = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearPublicProfileScope = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasPublicProfileScope = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool can_block = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getCanBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setCanBlock = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearCanBlock = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasCanBlock = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string lang = 20;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setLang = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearLang = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.hasLang = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * repeated string block_users = 21;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getBlockUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setBlockUsersList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.addBlockUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearBlockUsersList = function() {
  this.setBlockUsersList([]);
};


/**
 * repeated int32 roles = 23;
 * @return {!Array.<number>}
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.getRolesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 23));
};


/** @param {!Array.<number>} value */
proto.swagchat.protobuf.UpdateUserRequest.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.UpdateUserRequest.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


proto.swagchat.protobuf.UpdateUserRequest.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.DeleteUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.DeleteUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.DeleteUserRequest.displayName = 'proto.swagchat.protobuf.DeleteUserRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.DeleteUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.DeleteUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.DeleteUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.DeleteUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.DeleteUserRequest}
 */
proto.swagchat.protobuf.DeleteUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.DeleteUserRequest;
  return proto.swagchat.protobuf.DeleteUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.DeleteUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.DeleteUserRequest}
 */
proto.swagchat.protobuf.DeleteUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.DeleteUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.DeleteUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.DeleteUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.DeleteUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.DeleteUserRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.DeleteUserRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.DeleteUserRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.DeleteUserRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.RetrieveUserRoomsRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.RetrieveUserRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RetrieveUserRoomsRequest.displayName = 'proto.swagchat.protobuf.RetrieveUserRoomsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RetrieveUserRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RetrieveUserRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getField(msg, 11),
    offset: jspb.Message.getField(msg, 12),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance),
    userId: jspb.Message.getField(msg, 14),
    filter: jspb.Message.getField(msg, 15)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RetrieveUserRoomsRequest}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RetrieveUserRoomsRequest;
  return proto.swagchat.protobuf.RetrieveUserRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RetrieveUserRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RetrieveUserRoomsRequest}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 13:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 15:
      var value = /** @type {!proto.swagchat.protobuf.UserRoomsFilter} */ (reader.readEnum());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RetrieveUserRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RetrieveUserRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.UserRoomsFilter} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeEnum(
      15,
      f
    );
  }
};


/**
 * optional int32 limit = 11;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.clearLimit = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 offset = 12;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.clearOffset = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated OrderInfo orders = 13;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 13));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};


/**
 * optional string user_id = 14;
 * @return {string}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional UserRoomsFilter filter = 15;
 * @return {!proto.swagchat.protobuf.UserRoomsFilter}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.getFilter = function() {
  return /** @type {!proto.swagchat.protobuf.UserRoomsFilter} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {!proto.swagchat.protobuf.UserRoomsFilter} value */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.setFilter = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.clearFilter = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveUserRoomsRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.UserRoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.UserRoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.UserRoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.UserRoomsResponse.displayName = 'proto.swagchat.protobuf.UserRoomsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.UserRoomsResponse.repeatedFields_ = [1,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.UserRoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.UserRoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UserRoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    proto.swagchat.protobuf.MiniRoom.toObject, includeInstance),
    allcount: jspb.Message.getField(msg, 2),
    limit: jspb.Message.getField(msg, 3),
    offset: jspb.Message.getField(msg, 4),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.UserRoomsResponse}
 */
proto.swagchat.protobuf.UserRoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.UserRoomsResponse;
  return proto.swagchat.protobuf.UserRoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.UserRoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.UserRoomsResponse}
 */
proto.swagchat.protobuf.UserRoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.swagchat.protobuf.MiniRoom;
      reader.readMessage(value,proto.swagchat.protobuf.MiniRoom.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.UserRoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.UserRoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UserRoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.swagchat.protobuf.MiniRoom.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MiniRoom rooms = 1;
 * @return {!Array.<!proto.swagchat.protobuf.MiniRoom>}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.getRoomsList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.MiniRoom>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.swagchat.protobuf.MiniRoom, 1));
};


/** @param {!Array.<!proto.swagchat.protobuf.MiniRoom>} value */
proto.swagchat.protobuf.UserRoomsResponse.prototype.setRoomsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.swagchat.protobuf.MiniRoom=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.MiniRoom}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.swagchat.protobuf.MiniRoom, opt_index);
};


proto.swagchat.protobuf.UserRoomsResponse.prototype.clearRoomsList = function() {
  this.setRoomsList([]);
};


/**
 * optional int64 allCount = 2;
 * @return {number}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.getAllcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UserRoomsResponse.prototype.setAllcount = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.UserRoomsResponse.prototype.clearAllcount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.hasAllcount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UserRoomsResponse.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.UserRoomsResponse.prototype.clearLimit = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.UserRoomsResponse.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.UserRoomsResponse.prototype.clearOffset = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated OrderInfo orders = 5;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 5));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.UserRoomsResponse.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.UserRoomsResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.UserRoomsResponse.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RetrieveContactsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.RetrieveContactsRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.RetrieveContactsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RetrieveContactsRequest.displayName = 'proto.swagchat.protobuf.RetrieveContactsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.RetrieveContactsRequest.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RetrieveContactsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RetrieveContactsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveContactsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 11),
    limit: jspb.Message.getField(msg, 12),
    offset: jspb.Message.getField(msg, 13),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RetrieveContactsRequest}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RetrieveContactsRequest;
  return proto.swagchat.protobuf.RetrieveContactsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RetrieveContactsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RetrieveContactsRequest}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 14:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RetrieveContactsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RetrieveContactsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveContactsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.RetrieveContactsRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 limit = 12;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.RetrieveContactsRequest.prototype.clearLimit = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 offset = 13;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.RetrieveContactsRequest.prototype.clearOffset = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated OrderInfo orders = 14;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 14));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.RetrieveContactsRequest.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.RetrieveContactsRequest.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RetrieveProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.RetrieveProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RetrieveProfileRequest.displayName = 'proto.swagchat.protobuf.RetrieveProfileRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RetrieveProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RetrieveProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RetrieveProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RetrieveProfileRequest}
 */
proto.swagchat.protobuf.RetrieveProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RetrieveProfileRequest;
  return proto.swagchat.protobuf.RetrieveProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RetrieveProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RetrieveProfileRequest}
 */
proto.swagchat.protobuf.RetrieveProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RetrieveProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RetrieveProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RetrieveProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.RetrieveProfileRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.RetrieveProfileRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.RetrieveProfileRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveProfileRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.RetrieveRoleUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RetrieveRoleUsersRequest.displayName = 'proto.swagchat.protobuf.RetrieveRoleUsersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RetrieveRoleUsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RetrieveRoleUsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleId: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RetrieveRoleUsersRequest}
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RetrieveRoleUsersRequest;
  return proto.swagchat.protobuf.RetrieveRoleUsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RetrieveRoleUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RetrieveRoleUsersRequest}
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RetrieveRoleUsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RetrieveRoleUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional int32 role_id = 11;
 * @return {number}
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.prototype.getRoleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.prototype.setRoleId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.RetrieveRoleUsersRequest.prototype.clearRoleId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RetrieveRoleUsersRequest.prototype.hasRoleId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RoleUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.RoleUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.RoleUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RoleUsersResponse.displayName = 'proto.swagchat.protobuf.RoleUsersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.RoleUsersResponse.repeatedFields_ = [11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RoleUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RoleUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RoleUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RoleUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.swagchat.protobuf.User.toObject, includeInstance),
    userIdsList: jspb.Message.getRepeatedField(msg, 12)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RoleUsersResponse}
 */
proto.swagchat.protobuf.RoleUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RoleUsersResponse;
  return proto.swagchat.protobuf.RoleUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RoleUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RoleUsersResponse}
 */
proto.swagchat.protobuf.RoleUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = new proto.swagchat.protobuf.User;
      reader.readMessage(value,proto.swagchat.protobuf.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RoleUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RoleUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RoleUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RoleUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.swagchat.protobuf.User.serializeBinaryToWriter
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
};


/**
 * repeated User users = 11;
 * @return {!Array.<!proto.swagchat.protobuf.User>}
 */
proto.swagchat.protobuf.RoleUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.swagchat.protobuf.User, 11));
};


/** @param {!Array.<!proto.swagchat.protobuf.User>} value */
proto.swagchat.protobuf.RoleUsersResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.swagchat.protobuf.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.User}
 */
proto.swagchat.protobuf.RoleUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.swagchat.protobuf.User, opt_index);
};


proto.swagchat.protobuf.RoleUsersResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated string user_ids = 12;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.RoleUsersResponse.prototype.getUserIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.RoleUsersResponse.prototype.setUserIdsList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.RoleUsersResponse.prototype.addUserIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.swagchat.protobuf.RoleUsersResponse.prototype.clearUserIdsList = function() {
  this.setUserIdsList([]);
};


/**
 * @enum {number}
 */
proto.swagchat.protobuf.UserRoomsFilter = {
  ONLINE: 0,
  UNREAD: 1
};

/**
 * @enum {number}
 */
proto.swagchat.protobuf.PublicProfileScope = {
  SELF: 0,
  ALL: 1
};

goog.object.extend(exports, proto.swagchat.protobuf);
