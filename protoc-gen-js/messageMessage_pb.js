/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('./gogoproto/gogo_pb.js');
goog.exportSymbol('proto.swagchat.protobuf.Message', null, global);
goog.exportSymbol('proto.swagchat.protobuf.MessagePayload', null, global);
goog.exportSymbol('proto.swagchat.protobuf.Messages', null, global);
goog.exportSymbol('proto.swagchat.protobuf.SendMessageRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.Messages = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.Messages.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.Messages, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.Messages.displayName = 'proto.swagchat.protobuf.Messages';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.Messages.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.Messages.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.Messages.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.Messages} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.Messages.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.swagchat.protobuf.Message.toObject, includeInstance),
    allcount: jspb.Message.getField(msg, 2),
    limit: jspb.Message.getField(msg, 3),
    offset: jspb.Message.getField(msg, 4),
    order: jspb.Message.getField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.Messages}
 */
proto.swagchat.protobuf.Messages.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.Messages;
  return proto.swagchat.protobuf.Messages.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.Messages} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.Messages}
 */
proto.swagchat.protobuf.Messages.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.swagchat.protobuf.Message;
      reader.readMessage(value,proto.swagchat.protobuf.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.Messages.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.Messages.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.Messages} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.Messages.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.swagchat.protobuf.Message.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated Message messages = 1;
 * @return {!Array.<!proto.swagchat.protobuf.Message>}
 */
proto.swagchat.protobuf.Messages.prototype.getMessagesList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.swagchat.protobuf.Message, 1));
};


/** @param {!Array.<!proto.swagchat.protobuf.Message>} value */
proto.swagchat.protobuf.Messages.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.swagchat.protobuf.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.Message}
 */
proto.swagchat.protobuf.Messages.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.swagchat.protobuf.Message, opt_index);
};


proto.swagchat.protobuf.Messages.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional int64 allCount = 2;
 * @return {number}
 */
proto.swagchat.protobuf.Messages.prototype.getAllcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Messages.prototype.setAllcount = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.Messages.prototype.clearAllcount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Messages.prototype.hasAllcount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.swagchat.protobuf.Messages.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Messages.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.Messages.prototype.clearLimit = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Messages.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.swagchat.protobuf.Messages.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Messages.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.Messages.prototype.clearOffset = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Messages.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string order = 5;
 * @return {string}
 */
proto.swagchat.protobuf.Messages.prototype.getOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Messages.prototype.setOrder = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.swagchat.protobuf.Messages.prototype.clearOrder = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Messages.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.Message.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.Message.displayName = 'proto.swagchat.protobuf.Message';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.Message.repeatedFields_ = [42];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 11),
    messageId: jspb.Message.getField(msg, 12),
    roomId: jspb.Message.getField(msg, 13),
    userId: jspb.Message.getField(msg, 14),
    type: jspb.Message.getField(msg, 15),
    payload: msg.getPayload_asB64(),
    role: jspb.Message.getField(msg, 17),
    created: jspb.Message.getField(msg, 30),
    modified: jspb.Message.getField(msg, 31),
    deleted: jspb.Message.getField(msg, 32),
    eventName: jspb.Message.getField(msg, 41),
    userIdsList: jspb.Message.getRepeatedField(msg, 42)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.Message}
 */
proto.swagchat.protobuf.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.Message;
  return proto.swagchat.protobuf.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.Message}
 */
proto.swagchat.protobuf.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRole(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreated(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModified(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeleted(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBytes(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeInt64(
      32,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      42,
      f
    );
  }
};


/**
 * optional uint64 id = 11;
 * @return {number}
 */
proto.swagchat.protobuf.Message.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Message.prototype.setId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.Message.prototype.clearId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string message_id = 12;
 * @return {string}
 */
proto.swagchat.protobuf.Message.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Message.prototype.setMessageId = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.Message.prototype.clearMessageId = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasMessageId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string room_id = 13;
 * @return {string}
 */
proto.swagchat.protobuf.Message.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Message.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.Message.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string user_id = 14;
 * @return {string}
 */
proto.swagchat.protobuf.Message.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Message.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.Message.prototype.clearUserId = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string type = 15;
 * @return {string}
 */
proto.swagchat.protobuf.Message.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Message.prototype.setType = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.Message.prototype.clearType = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasType = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes payload = 16;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.Message.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * optional bytes payload = 16;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.swagchat.protobuf.Message.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.Message.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.Message.prototype.setPayload = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.Message.prototype.clearPayload = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 role = 17;
 * @return {number}
 */
proto.swagchat.protobuf.Message.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Message.prototype.setRole = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.Message.prototype.clearRole = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasRole = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 created = 30;
 * @return {number}
 */
proto.swagchat.protobuf.Message.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Message.prototype.setCreated = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.swagchat.protobuf.Message.prototype.clearCreated = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional int64 modified = 31;
 * @return {number}
 */
proto.swagchat.protobuf.Message.prototype.getModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Message.prototype.setModified = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.swagchat.protobuf.Message.prototype.clearModified = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasModified = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional int64 deleted = 32;
 * @return {number}
 */
proto.swagchat.protobuf.Message.prototype.getDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Message.prototype.setDeleted = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.swagchat.protobuf.Message.prototype.clearDeleted = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasDeleted = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional string event_name = 41;
 * @return {string}
 */
proto.swagchat.protobuf.Message.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Message.prototype.setEventName = function(value) {
  jspb.Message.setField(this, 41, value);
};


proto.swagchat.protobuf.Message.prototype.clearEventName = function() {
  jspb.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Message.prototype.hasEventName = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * repeated string user_ids = 42;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.Message.prototype.getUserIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 42));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.Message.prototype.setUserIdsList = function(value) {
  jspb.Message.setField(this, 42, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.Message.prototype.addUserIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 42, value, opt_index);
};


proto.swagchat.protobuf.Message.prototype.clearUserIdsList = function() {
  this.setUserIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.MessagePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.MessagePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.MessagePayload.displayName = 'proto.swagchat.protobuf.MessagePayload';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.MessagePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.MessagePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.MessagePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.MessagePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getField(msg, 1),
    mime: jspb.Message.getField(msg, 11),
    filename: jspb.Message.getField(msg, 12),
    sourceurl: jspb.Message.getField(msg, 13),
    thumbnailurl: jspb.Message.getField(msg, 14),
    width: jspb.Message.getField(msg, 15),
    height: jspb.Message.getField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.MessagePayload}
 */
proto.swagchat.protobuf.MessagePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.MessagePayload;
  return proto.swagchat.protobuf.MessagePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.MessagePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.MessagePayload}
 */
proto.swagchat.protobuf.MessagePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceurl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailurl(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.MessagePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.MessagePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.MessagePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.MessagePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MessagePayload.prototype.setText = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearText = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasText = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string mime = 11;
 * @return {string}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MessagePayload.prototype.setMime = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearMime = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasMime = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string filename = 12;
 * @return {string}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MessagePayload.prototype.setFilename = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearFilename = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasFilename = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string sourceUrl = 13;
 * @return {string}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getSourceurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MessagePayload.prototype.setSourceurl = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearSourceurl = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasSourceurl = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string thumbnailUrl = 14;
 * @return {string}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getThumbnailurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MessagePayload.prototype.setThumbnailurl = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearThumbnailurl = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasThumbnailurl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 width = 15;
 * @return {number}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MessagePayload.prototype.setWidth = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearWidth = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 height = 16;
 * @return {number}
 */
proto.swagchat.protobuf.MessagePayload.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MessagePayload.prototype.setHeight = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.MessagePayload.prototype.clearHeight = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MessagePayload.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.SendMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.SendMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.SendMessageRequest.displayName = 'proto.swagchat.protobuf.SendMessageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.SendMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.SendMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.SendMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getField(msg, 12),
    roomId: jspb.Message.getField(msg, 13),
    userId: jspb.Message.getField(msg, 14),
    type: jspb.Message.getField(msg, 15),
    payload: msg.getPayload_asB64(),
    role: jspb.Message.getField(msg, 17),
    eventName: jspb.Message.getField(msg, 18)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.SendMessageRequest}
 */
proto.swagchat.protobuf.SendMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.SendMessageRequest;
  return proto.swagchat.protobuf.SendMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.SendMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.SendMessageRequest}
 */
proto.swagchat.protobuf.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRole(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.SendMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.SendMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBytes(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string message_id = 12;
 * @return {string}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setMessageId = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearMessageId = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasMessageId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string room_id = 13;
 * @return {string}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string user_id = 14;
 * @return {string}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string type = 15;
 * @return {string}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setType = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearType = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes payload = 16;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * optional bytes payload = 16;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setPayload = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearPayload = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 role = 17;
 * @return {number}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setRole = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearRole = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasRole = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string event_name = 18;
 * @return {string}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.SendMessageRequest.prototype.setEventName = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.SendMessageRequest.prototype.clearEventName = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.SendMessageRequest.prototype.hasEventName = function() {
  return jspb.Message.getField(this, 18) != null;
};


goog.object.extend(exports, proto.swagchat.protobuf);
