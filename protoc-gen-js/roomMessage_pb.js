/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('./gogoproto/gogo_pb.js');
var commonMessage_pb = require('./commonMessage_pb.js');
var messageMessage_pb = require('./messageMessage_pb.js');
goog.exportSymbol('proto.swagchat.protobuf.CreateRoomRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.DeleteRoomRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.GetRoomMessagesRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.GetRoomRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.GetRoomsRequest', null, global);
goog.exportSymbol('proto.swagchat.protobuf.MiniUser', null, global);
goog.exportSymbol('proto.swagchat.protobuf.Room', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RoomMessagesResponse', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RoomType', null, global);
goog.exportSymbol('proto.swagchat.protobuf.RoomsResponse', null, global);
goog.exportSymbol('proto.swagchat.protobuf.SpeechMode', null, global);
goog.exportSymbol('proto.swagchat.protobuf.UpdateRoomRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.Room = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.Room.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.Room, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.Room.displayName = 'proto.swagchat.protobuf.Room';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.Room.repeatedFields_ = [40];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.Room.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.Room.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.Room} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.Room.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 11),
    roomId: jspb.Message.getField(msg, 12),
    userId: jspb.Message.getField(msg, 13),
    name: jspb.Message.getField(msg, 14),
    pictureUrl: jspb.Message.getField(msg, 15),
    informationUrl: jspb.Message.getField(msg, 16),
    type: jspb.Message.getField(msg, 17),
    canLeft: jspb.Message.getField(msg, 18),
    speechMode: jspb.Message.getField(msg, 19),
    metaData: msg.getMetaData_asB64(),
    availableMessageTypes: jspb.Message.getField(msg, 21),
    lastMessage: jspb.Message.getField(msg, 22),
    lastMessageUpdated: jspb.Message.getField(msg, 23),
    messageCount: jspb.Message.getField(msg, 24),
    notificationTopicId: jspb.Message.getField(msg, 25),
    created: jspb.Message.getField(msg, 31),
    modified: jspb.Message.getField(msg, 32),
    deleted: jspb.Message.getField(msg, 33),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.swagchat.protobuf.MiniUser.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.Room}
 */
proto.swagchat.protobuf.Room.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.Room;
  return proto.swagchat.protobuf.Room.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.Room} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.Room}
 */
proto.swagchat.protobuf.Room.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 17:
      var value = /** @type {!proto.swagchat.protobuf.RoomType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanLeft(value);
      break;
    case 19:
      var value = /** @type {!proto.swagchat.protobuf.SpeechMode} */ (reader.readEnum());
      msg.setSpeechMode(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableMessageTypes(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastMessage(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastMessageUpdated(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageCount(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotificationTopicId(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreated(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModified(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeleted(value);
      break;
    case 40:
      var value = new proto.swagchat.protobuf.MiniUser;
      reader.readMessage(value,proto.swagchat.protobuf.MiniUser.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.Room.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.Room.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.Room} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.Room.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.SpeechMode} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBytes(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeInt64(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      40,
      f,
      proto.swagchat.protobuf.MiniUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 11;
 * @return {number}
 */
proto.swagchat.protobuf.Room.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Room.prototype.setId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.Room.prototype.clearId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string room_id = 12;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.Room.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string user_id = 13;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.Room.prototype.clearUserId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string name = 14;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setName = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.Room.prototype.clearName = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasName = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string picture_url = 15;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.Room.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string information_url = 16;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.Room.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RoomType type = 17;
 * @return {!proto.swagchat.protobuf.RoomType}
 */
proto.swagchat.protobuf.Room.prototype.getType = function() {
  return /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {!proto.swagchat.protobuf.RoomType} value */
proto.swagchat.protobuf.Room.prototype.setType = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.Room.prototype.clearType = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasType = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool can_Left = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.Room.prototype.getCanLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.Room.prototype.setCanLeft = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.Room.prototype.clearCanLeft = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasCanLeft = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional SpeechMode speech_mode = 19;
 * @return {!proto.swagchat.protobuf.SpeechMode}
 */
proto.swagchat.protobuf.Room.prototype.getSpeechMode = function() {
  return /** @type {!proto.swagchat.protobuf.SpeechMode} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {!proto.swagchat.protobuf.SpeechMode} value */
proto.swagchat.protobuf.Room.prototype.setSpeechMode = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.swagchat.protobuf.Room.prototype.clearSpeechMode = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasSpeechMode = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bytes meta_data = 20;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.Room.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes meta_data = 20;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.Room.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.Room.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.swagchat.protobuf.Room.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string available_message_types = 21;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getAvailableMessageTypes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setAvailableMessageTypes = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.swagchat.protobuf.Room.prototype.clearAvailableMessageTypes = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasAvailableMessageTypes = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string last_message = 22;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getLastMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setLastMessage = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.swagchat.protobuf.Room.prototype.clearLastMessage = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasLastMessage = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional int64 last_message_updated = 23;
 * @return {number}
 */
proto.swagchat.protobuf.Room.prototype.getLastMessageUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Room.prototype.setLastMessageUpdated = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.swagchat.protobuf.Room.prototype.clearLastMessageUpdated = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasLastMessageUpdated = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int64 message_count = 24;
 * @return {number}
 */
proto.swagchat.protobuf.Room.prototype.getMessageCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Room.prototype.setMessageCount = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.swagchat.protobuf.Room.prototype.clearMessageCount = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasMessageCount = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string notification_topic_id = 25;
 * @return {string}
 */
proto.swagchat.protobuf.Room.prototype.getNotificationTopicId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.Room.prototype.setNotificationTopicId = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.swagchat.protobuf.Room.prototype.clearNotificationTopicId = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasNotificationTopicId = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int64 created = 31;
 * @return {number}
 */
proto.swagchat.protobuf.Room.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Room.prototype.setCreated = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.swagchat.protobuf.Room.prototype.clearCreated = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional int64 modified = 32;
 * @return {number}
 */
proto.swagchat.protobuf.Room.prototype.getModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Room.prototype.setModified = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.swagchat.protobuf.Room.prototype.clearModified = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasModified = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional int64 deleted = 33;
 * @return {number}
 */
proto.swagchat.protobuf.Room.prototype.getDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.Room.prototype.setDeleted = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.swagchat.protobuf.Room.prototype.clearDeleted = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.Room.prototype.hasDeleted = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * repeated MiniUser users = 40;
 * @return {!Array.<!proto.swagchat.protobuf.MiniUser>}
 */
proto.swagchat.protobuf.Room.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.MiniUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.swagchat.protobuf.MiniUser, 40));
};


/** @param {!Array.<!proto.swagchat.protobuf.MiniUser>} value */
proto.swagchat.protobuf.Room.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 40, value);
};


/**
 * @param {!proto.swagchat.protobuf.MiniUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.MiniUser}
 */
proto.swagchat.protobuf.Room.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 40, opt_value, proto.swagchat.protobuf.MiniUser, opt_index);
};


proto.swagchat.protobuf.Room.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.MiniUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.MiniUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.MiniUser.displayName = 'proto.swagchat.protobuf.MiniUser';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.MiniUser.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.MiniUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.MiniUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.MiniUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getField(msg, 2),
    name: jspb.Message.getField(msg, 3),
    pictureUrl: jspb.Message.getField(msg, 4),
    informationUrl: jspb.Message.getField(msg, 5),
    metaData: msg.getMetaData_asB64(),
    canBlock: jspb.Message.getField(msg, 7),
    lastAccessed: jspb.Message.getField(msg, 8),
    ruDisplay: jspb.Message.getField(msg, 9),
    created: jspb.Message.getField(msg, 21),
    modified: jspb.Message.getField(msg, 22)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.MiniUser}
 */
proto.swagchat.protobuf.MiniUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.MiniUser;
  return proto.swagchat.protobuf.MiniUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.MiniUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.MiniUser}
 */
proto.swagchat.protobuf.MiniUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanBlock(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastAccessed(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRuDisplay(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreated(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.MiniUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.MiniUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.MiniUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.MiniUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeInt64(
      22,
      f
    );
  }
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.swagchat.protobuf.MiniUser.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniUser.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearUserId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.swagchat.protobuf.MiniUser.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniUser.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearName = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string picture_url = 4;
 * @return {string}
 */
proto.swagchat.protobuf.MiniUser.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniUser.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string information_url = 5;
 * @return {string}
 */
proto.swagchat.protobuf.MiniUser.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.MiniUser.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes meta_data = 6;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.MiniUser.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes meta_data = 6;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.MiniUser.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.MiniUser.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.MiniUser.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool can_block = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.getCanBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.MiniUser.prototype.setCanBlock = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearCanBlock = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasCanBlock = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 last_accessed = 8;
 * @return {number}
 */
proto.swagchat.protobuf.MiniUser.prototype.getLastAccessed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniUser.prototype.setLastAccessed = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearLastAccessed = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasLastAccessed = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool ru_display = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.getRuDisplay = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.MiniUser.prototype.setRuDisplay = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearRuDisplay = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasRuDisplay = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 created = 21;
 * @return {number}
 */
proto.swagchat.protobuf.MiniUser.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniUser.prototype.setCreated = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearCreated = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int64 modified = 22;
 * @return {number}
 */
proto.swagchat.protobuf.MiniUser.prototype.getModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.MiniUser.prototype.setModified = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.swagchat.protobuf.MiniUser.prototype.clearModified = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.MiniUser.prototype.hasModified = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.CreateRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.CreateRoomRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.CreateRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.CreateRoomRequest.displayName = 'proto.swagchat.protobuf.CreateRoomRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.CreateRoomRequest.repeatedFields_ = [41];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.CreateRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.CreateRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.CreateRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getField(msg, 12),
    userId: jspb.Message.getField(msg, 13),
    name: jspb.Message.getField(msg, 14),
    pictureUrl: jspb.Message.getField(msg, 15),
    informationUrl: jspb.Message.getField(msg, 16),
    type: jspb.Message.getField(msg, 7),
    canLeft: jspb.Message.getField(msg, 25),
    speechMode: jspb.Message.getField(msg, 26),
    metaData: msg.getMetaData_asB64(),
    availableMessageTypes: jspb.Message.getField(msg, 18),
    userIdsList: jspb.Message.getRepeatedField(msg, 41)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.CreateRoomRequest}
 */
proto.swagchat.protobuf.CreateRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.CreateRoomRequest;
  return proto.swagchat.protobuf.CreateRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.CreateRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.CreateRoomRequest}
 */
proto.swagchat.protobuf.CreateRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 7:
      var value = /** @type {!proto.swagchat.protobuf.RoomType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanLeft(value);
      break;
    case 26:
      var value = /** @type {!proto.swagchat.protobuf.SpeechMode} */ (reader.readEnum());
      msg.setSpeechMode(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableMessageTypes(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.CreateRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.CreateRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.CreateRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.SpeechMode} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeEnum(
      26,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      41,
      f
    );
  }
};


/**
 * optional string room_id = 12;
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string user_id = 13;
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string name = 14;
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearName = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string picture_url = 15;
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string information_url = 16;
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RoomType type = 7;
 * @return {!proto.swagchat.protobuf.RoomType}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getType = function() {
  return /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.swagchat.protobuf.RoomType} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setType = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearType = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool can_Left = 25;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getCanLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setCanLeft = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearCanLeft = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasCanLeft = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional SpeechMode speech_mode = 26;
 * @return {!proto.swagchat.protobuf.SpeechMode}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getSpeechMode = function() {
  return /** @type {!proto.swagchat.protobuf.SpeechMode} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {!proto.swagchat.protobuf.SpeechMode} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setSpeechMode = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearSpeechMode = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasSpeechMode = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bytes meta_data = 17;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes meta_data = 17;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string available_message_types = 18;
 * @return {string}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getAvailableMessageTypes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setAvailableMessageTypes = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearAvailableMessageTypes = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.hasAvailableMessageTypes = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated string user_ids = 41;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.getUserIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 41));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.CreateRoomRequest.prototype.setUserIdsList = function(value) {
  jspb.Message.setField(this, 41, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.CreateRoomRequest.prototype.addUserIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 41, value, opt_index);
};


proto.swagchat.protobuf.CreateRoomRequest.prototype.clearUserIdsList = function() {
  this.setUserIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.GetRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.GetRoomsRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.GetRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.GetRoomsRequest.displayName = 'proto.swagchat.protobuf.GetRoomsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.GetRoomsRequest.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.GetRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.GetRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.GetRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getField(msg, 11),
    offset: jspb.Message.getField(msg, 12),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance),
    userId: jspb.Message.getField(msg, 14)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.GetRoomsRequest}
 */
proto.swagchat.protobuf.GetRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.GetRoomsRequest;
  return proto.swagchat.protobuf.GetRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.GetRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.GetRoomsRequest}
 */
proto.swagchat.protobuf.GetRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 13:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.GetRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.GetRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.GetRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional int32 limit = 11;
 * @return {number}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.GetRoomsRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.GetRoomsRequest.prototype.clearLimit = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 offset = 12;
 * @return {number}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.GetRoomsRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.GetRoomsRequest.prototype.clearOffset = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated OrderInfo orders = 13;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 13));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.GetRoomsRequest.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.GetRoomsRequest.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};


/**
 * optional string user_id = 14;
 * @return {string}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.GetRoomsRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.GetRoomsRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 14) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.RoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.RoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RoomsResponse.displayName = 'proto.swagchat.protobuf.RoomsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.RoomsResponse.repeatedFields_ = [1,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    proto.swagchat.protobuf.Room.toObject, includeInstance),
    allcount: jspb.Message.getField(msg, 2),
    limit: jspb.Message.getField(msg, 3),
    offset: jspb.Message.getField(msg, 4),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RoomsResponse}
 */
proto.swagchat.protobuf.RoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RoomsResponse;
  return proto.swagchat.protobuf.RoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RoomsResponse}
 */
proto.swagchat.protobuf.RoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.swagchat.protobuf.Room;
      reader.readMessage(value,proto.swagchat.protobuf.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.swagchat.protobuf.Room.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Room rooms = 1;
 * @return {!Array.<!proto.swagchat.protobuf.Room>}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.getRoomsList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.swagchat.protobuf.Room, 1));
};


/** @param {!Array.<!proto.swagchat.protobuf.Room>} value */
proto.swagchat.protobuf.RoomsResponse.prototype.setRoomsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.swagchat.protobuf.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.Room}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.swagchat.protobuf.Room, opt_index);
};


proto.swagchat.protobuf.RoomsResponse.prototype.clearRoomsList = function() {
  this.setRoomsList([]);
};


/**
 * optional int64 allCount = 2;
 * @return {number}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.getAllcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RoomsResponse.prototype.setAllcount = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.RoomsResponse.prototype.clearAllcount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.hasAllcount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RoomsResponse.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.RoomsResponse.prototype.clearLimit = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RoomsResponse.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.RoomsResponse.prototype.clearOffset = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated OrderInfo orders = 5;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 5));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.RoomsResponse.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.RoomsResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.RoomsResponse.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.GetRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.GetRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.GetRoomRequest.displayName = 'proto.swagchat.protobuf.GetRoomRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.GetRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.GetRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.GetRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.GetRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.GetRoomRequest}
 */
proto.swagchat.protobuf.GetRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.GetRoomRequest;
  return proto.swagchat.protobuf.GetRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.GetRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.GetRoomRequest}
 */
proto.swagchat.protobuf.GetRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.GetRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.GetRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.GetRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.GetRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string room_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.GetRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.GetRoomRequest.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.GetRoomRequest.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomRequest.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.UpdateRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.UpdateRoomRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.UpdateRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.UpdateRoomRequest.displayName = 'proto.swagchat.protobuf.UpdateRoomRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.UpdateRoomRequest.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.UpdateRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.UpdateRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UpdateRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getField(msg, 11),
    name: jspb.Message.getField(msg, 13),
    pictureUrl: jspb.Message.getField(msg, 14),
    informationUrl: jspb.Message.getField(msg, 15),
    type: jspb.Message.getField(msg, 17),
    canLeft: jspb.Message.getField(msg, 18),
    speechMode: jspb.Message.getField(msg, 19),
    metaData: msg.getMetaData_asB64(),
    availableMessageTypes: jspb.Message.getField(msg, 21),
    userIdsList: jspb.Message.getRepeatedField(msg, 22)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.UpdateRoomRequest}
 */
proto.swagchat.protobuf.UpdateRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.UpdateRoomRequest;
  return proto.swagchat.protobuf.UpdateRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.UpdateRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.UpdateRoomRequest}
 */
proto.swagchat.protobuf.UpdateRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureUrl(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformationUrl(value);
      break;
    case 17:
      var value = /** @type {!proto.swagchat.protobuf.RoomType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanLeft(value);
      break;
    case 19:
      var value = /** @type {!proto.swagchat.protobuf.SpeechMode} */ (reader.readEnum());
      msg.setSpeechMode(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetaData(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableMessageTypes(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.UpdateRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.UpdateRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.UpdateRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!proto.swagchat.protobuf.SpeechMode} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBytes(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
};


/**
 * optional string room_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string name = 13;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearName = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string picture_url = 14;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getPictureUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setPictureUrl = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearPictureUrl = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasPictureUrl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string information_url = 15;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getInformationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setInformationUrl = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearInformationUrl = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasInformationUrl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional RoomType type = 17;
 * @return {!proto.swagchat.protobuf.RoomType}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getType = function() {
  return /** @type {!proto.swagchat.protobuf.RoomType} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {!proto.swagchat.protobuf.RoomType} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setType = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearType = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool can_Left = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getCanLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setCanLeft = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearCanLeft = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasCanLeft = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional SpeechMode speech_mode = 19;
 * @return {!proto.swagchat.protobuf.SpeechMode}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getSpeechMode = function() {
  return /** @type {!proto.swagchat.protobuf.SpeechMode} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {!proto.swagchat.protobuf.SpeechMode} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setSpeechMode = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearSpeechMode = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasSpeechMode = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bytes meta_data = 20;
 * @return {!(string|Uint8Array)}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getMetaData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes meta_data = 20;
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {string}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getMetaData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetaData()));
};


/**
 * optional bytes meta_data = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetaData()`
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getMetaData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetaData()));
};


/** @param {!(string|Uint8Array)} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setMetaData = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearMetaData = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string available_message_types = 21;
 * @return {string}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getAvailableMessageTypes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setAvailableMessageTypes = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearAvailableMessageTypes = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.hasAvailableMessageTypes = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated string user_ids = 22;
 * @return {!Array.<string>}
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.getUserIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/** @param {!Array.<string>} value */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.setUserIdsList = function(value) {
  jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.UpdateRoomRequest.prototype.addUserIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


proto.swagchat.protobuf.UpdateRoomRequest.prototype.clearUserIdsList = function() {
  this.setUserIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.DeleteRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.swagchat.protobuf.DeleteRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.DeleteRoomRequest.displayName = 'proto.swagchat.protobuf.DeleteRoomRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.DeleteRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.DeleteRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.DeleteRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.DeleteRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.DeleteRoomRequest}
 */
proto.swagchat.protobuf.DeleteRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.DeleteRoomRequest;
  return proto.swagchat.protobuf.DeleteRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.DeleteRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.DeleteRoomRequest}
 */
proto.swagchat.protobuf.DeleteRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.DeleteRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.DeleteRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.DeleteRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.DeleteRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string room_id = 11;
 * @return {string}
 */
proto.swagchat.protobuf.DeleteRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.DeleteRoomRequest.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.DeleteRoomRequest.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.DeleteRoomRequest.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.GetRoomMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.GetRoomMessagesRequest.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.GetRoomMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.GetRoomMessagesRequest.displayName = 'proto.swagchat.protobuf.GetRoomMessagesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.repeatedFields_ = [13,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.GetRoomMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.GetRoomMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getField(msg, 11),
    offset: jspb.Message.getField(msg, 12),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance),
    roomId: jspb.Message.getField(msg, 14),
    roleIdsList: jspb.Message.getRepeatedField(msg, 15)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.GetRoomMessagesRequest}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.GetRoomMessagesRequest;
  return proto.swagchat.protobuf.GetRoomMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.GetRoomMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.GetRoomMessagesRequest}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 13:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addRoleIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.GetRoomMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.GetRoomMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getRoleIdsList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      15,
      f
    );
  }
};


/**
 * optional int32 limit = 11;
 * @return {number}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.clearLimit = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 offset = 12;
 * @return {number}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.clearOffset = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated OrderInfo orders = 13;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 13));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};


/**
 * optional string room_id = 14;
 * @return {string}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated int32 role_ids = 15;
 * @return {!Array.<number>}
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.getRoleIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 15));
};


/** @param {!Array.<number>} value */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.setRoleIdsList = function(value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.addRoleIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


proto.swagchat.protobuf.GetRoomMessagesRequest.prototype.clearRoleIdsList = function() {
  this.setRoleIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.swagchat.protobuf.RoomMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.swagchat.protobuf.RoomMessagesResponse.repeatedFields_, null);
};
goog.inherits(proto.swagchat.protobuf.RoomMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.swagchat.protobuf.RoomMessagesResponse.displayName = 'proto.swagchat.protobuf.RoomMessagesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.swagchat.protobuf.RoomMessagesResponse.repeatedFields_ = [1,5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.swagchat.protobuf.RoomMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.swagchat.protobuf.RoomMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RoomMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    messageMessage_pb.Message.toObject, includeInstance),
    allcount: jspb.Message.getField(msg, 2),
    limit: jspb.Message.getField(msg, 3),
    offset: jspb.Message.getField(msg, 4),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    commonMessage_pb.OrderInfo.toObject, includeInstance),
    roomId: jspb.Message.getField(msg, 6),
    roleIdsList: jspb.Message.getRepeatedField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.swagchat.protobuf.RoomMessagesResponse}
 */
proto.swagchat.protobuf.RoomMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.swagchat.protobuf.RoomMessagesResponse;
  return proto.swagchat.protobuf.RoomMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.swagchat.protobuf.RoomMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.swagchat.protobuf.RoomMessagesResponse}
 */
proto.swagchat.protobuf.RoomMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new messageMessage_pb.Message;
      reader.readMessage(value,messageMessage_pb.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = new commonMessage_pb.OrderInfo;
      reader.readMessage(value,commonMessage_pb.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addRoleIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.swagchat.protobuf.RoomMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.swagchat.protobuf.RoomMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.swagchat.protobuf.RoomMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      messageMessage_pb.Message.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      commonMessage_pb.OrderInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRoleIdsList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      7,
      f
    );
  }
};


/**
 * repeated Message messages = 1;
 * @return {!Array.<!proto.swagchat.protobuf.Message>}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getMessagesList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, messageMessage_pb.Message, 1));
};


/** @param {!Array.<!proto.swagchat.protobuf.Message>} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.swagchat.protobuf.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.Message}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.swagchat.protobuf.Message, opt_index);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional int64 allCount = 2;
 * @return {number}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getAllcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setAllcount = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearAllcount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.hasAllcount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearLimit = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearOffset = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated OrderInfo orders = 5;
 * @return {!Array.<!proto.swagchat.protobuf.OrderInfo>}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.swagchat.protobuf.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_pb.OrderInfo, 5));
};


/** @param {!Array.<!proto.swagchat.protobuf.OrderInfo>} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.swagchat.protobuf.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.swagchat.protobuf.OrderInfo}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.swagchat.protobuf.OrderInfo, opt_index);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};


/**
 * optional string room_id = 6;
 * @return {string}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setRoomId = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearRoomId = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.hasRoomId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated int32 role_ids = 7;
 * @return {!Array.<number>}
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.getRoleIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<number>} value */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.setRoleIdsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.swagchat.protobuf.RoomMessagesResponse.prototype.addRoleIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.swagchat.protobuf.RoomMessagesResponse.prototype.clearRoleIdsList = function() {
  this.setRoleIdsList([]);
};


/**
 * @enum {number}
 */
proto.swagchat.protobuf.RoomType = {
  ONEONONEROOM: 0,
  PRIVATEROOM: 1,
  PUBLICROOM: 2,
  NOTICEROOM: 3
};

/**
 * @enum {number}
 */
proto.swagchat.protobuf.SpeechMode = {
  SPEECHMODENONE: 0,
  WAKEUPWEBTOWEB: 1,
  WAKEUPWEBTOCLOUD: 2,
  WAKEUPCLOUDTOCLOUD: 3,
  ALWAYS: 4,
  MANUAL: 5
};

goog.object.extend(exports, proto.swagchat.protobuf);
