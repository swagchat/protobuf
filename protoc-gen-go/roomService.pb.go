// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: roomService.proto

package protoc_gen_go

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoomService service

type RoomServiceClient interface {
	CreateRoom(ctx context.Context, in *CreateRoomRequest, opts ...grpc.CallOption) (*Room, error)
	RetrieveRooms(ctx context.Context, in *RetrieveRoomsRequest, opts ...grpc.CallOption) (*RoomsResponse, error)
	RetrieveRoom(ctx context.Context, in *RetrieveRoomRequest, opts ...grpc.CallOption) (*Room, error)
	UpdateRoom(ctx context.Context, in *UpdateRoomRequest, opts ...grpc.CallOption) (*Room, error)
	DeleteRoom(ctx context.Context, in *DeleteRoomRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	RetrieveRoomMessages(ctx context.Context, in *RetrieveRoomMessagesRequest, opts ...grpc.CallOption) (*RoomMessagesResponse, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) CreateRoom(ctx context.Context, in *CreateRoomRequest, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomService/CreateRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) RetrieveRooms(ctx context.Context, in *RetrieveRoomsRequest, opts ...grpc.CallOption) (*RoomsResponse, error) {
	out := new(RoomsResponse)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomService/RetrieveRooms", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) RetrieveRoom(ctx context.Context, in *RetrieveRoomRequest, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomService/RetrieveRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) UpdateRoom(ctx context.Context, in *UpdateRoomRequest, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomService/UpdateRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) DeleteRoom(ctx context.Context, in *DeleteRoomRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomService/DeleteRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) RetrieveRoomMessages(ctx context.Context, in *RetrieveRoomMessagesRequest, opts ...grpc.CallOption) (*RoomMessagesResponse, error) {
	out := new(RoomMessagesResponse)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomService/RetrieveRoomMessages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoomService service

type RoomServiceServer interface {
	CreateRoom(context.Context, *CreateRoomRequest) (*Room, error)
	RetrieveRooms(context.Context, *RetrieveRoomsRequest) (*RoomsResponse, error)
	RetrieveRoom(context.Context, *RetrieveRoomRequest) (*Room, error)
	UpdateRoom(context.Context, *UpdateRoomRequest) (*Room, error)
	DeleteRoom(context.Context, *DeleteRoomRequest) (*google_protobuf1.Empty, error)
	RetrieveRoomMessages(context.Context, *RetrieveRoomMessagesRequest) (*RoomMessagesResponse, error)
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CreateRoom(ctx, req.(*CreateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_RetrieveRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRoomsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).RetrieveRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomService/RetrieveRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).RetrieveRooms(ctx, req.(*RetrieveRoomsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_RetrieveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).RetrieveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomService/RetrieveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).RetrieveRoom(ctx, req.(*RetrieveRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_UpdateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).UpdateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomService/UpdateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).UpdateRoom(ctx, req.(*UpdateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_DeleteRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).DeleteRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomService/DeleteRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).DeleteRoom(ctx, req.(*DeleteRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_RetrieveRoomMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRoomMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).RetrieveRoomMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomService/RetrieveRoomMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).RetrieveRoomMessages(ctx, req.(*RetrieveRoomMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "swagchat.protobuf.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _RoomService_CreateRoom_Handler,
		},
		{
			MethodName: "RetrieveRooms",
			Handler:    _RoomService_RetrieveRooms_Handler,
		},
		{
			MethodName: "RetrieveRoom",
			Handler:    _RoomService_RetrieveRoom_Handler,
		},
		{
			MethodName: "UpdateRoom",
			Handler:    _RoomService_UpdateRoom_Handler,
		},
		{
			MethodName: "DeleteRoom",
			Handler:    _RoomService_DeleteRoom_Handler,
		},
		{
			MethodName: "RetrieveRoomMessages",
			Handler:    _RoomService_RetrieveRoomMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "roomService.proto",
}

func init() { proto.RegisterFile("roomService.proto", fileDescriptorRoomService) }

var fileDescriptorRoomService = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcb, 0x4a, 0xc4, 0x40,
	0x10, 0x45, 0x67, 0x21, 0x2e, 0x4a, 0x5d, 0x4c, 0x23, 0x0a, 0xd1, 0x85, 0x04, 0x71, 0x40, 0x9c,
	0x0e, 0xe8, 0x1f, 0xf8, 0xd8, 0x99, 0x85, 0x11, 0x37, 0xe2, 0xa6, 0x13, 0xcb, 0x9e, 0xc0, 0x24,
	0x95, 0xe9, 0xea, 0x8c, 0xf8, 0x31, 0xfe, 0xab, 0xe4, 0xd1, 0x74, 0xc0, 0x79, 0xed, 0x52, 0xb9,
	0xa7, 0xee, 0xad, 0x4a, 0x05, 0xc6, 0x86, 0xa8, 0x78, 0x45, 0xb3, 0xcc, 0x33, 0x94, 0x95, 0x21,
	0x4b, 0x62, 0xcc, 0xdf, 0x4a, 0x67, 0x33, 0x65, 0xbb, 0x3a, 0xad, 0xbf, 0x82, 0x73, 0x4d, 0xa4,
	0xe7, 0x18, 0xa9, 0x2a, 0x8f, 0x54, 0x59, 0x92, 0x55, 0x36, 0xa7, 0x92, 0x3b, 0x20, 0x38, 0xeb,
	0x55, 0x87, 0x47, 0x58, 0x54, 0xf6, 0xa7, 0x17, 0xdb, 0x80, 0x18, 0x99, 0x95, 0xee, 0x03, 0x6e,
	0x7f, 0xf7, 0xe0, 0x20, 0xf1, 0xb1, 0x22, 0x06, 0x78, 0x30, 0xa8, 0x2c, 0x36, 0x2f, 0xc5, 0xa5,
	0xfc, 0x97, 0x2f, 0xbd, 0x9c, 0xe0, 0xa2, 0x46, 0xb6, 0xc1, 0xe9, 0x0a, 0xaa, 0xd1, 0xc3, 0x91,
	0xf8, 0x80, 0xa3, 0x04, 0xad, 0xc9, 0x71, 0xd9, 0x76, 0xb0, 0x98, 0xac, 0x62, 0x87, 0x84, 0x33,
	0xbd, 0x58, 0x63, 0xca, 0x09, 0x72, 0x45, 0x25, 0x63, 0x38, 0x12, 0x2f, 0x70, 0x38, 0xec, 0x15,
	0x57, 0x5b, 0xcc, 0x77, 0x18, 0x38, 0x06, 0x78, 0xab, 0x3e, 0x37, 0xed, 0xef, 0xe5, 0x1d, 0xec,
	0x9e, 0x01, 0x1e, 0x71, 0x8e, 0x1b, 0xec, 0xbc, 0xec, 0xec, 0x4e, 0x64, 0x77, 0x43, 0xcf, 0x3c,
	0x35, 0x37, 0x0c, 0x47, 0x62, 0x01, 0xc7, 0xc3, 0x75, 0xfa, 0x4b, 0xb2, 0x90, 0x5b, 0xf6, 0x76,
	0xa0, 0x4b, 0x98, 0xac, 0x19, 0xd8, 0x73, 0xee, 0x13, 0xdf, 0xdf, 0xbc, 0x5f, 0xeb, 0xdc, 0xce,
	0xea, 0x54, 0x66, 0x54, 0x44, 0xae, 0xcd, 0xff, 0x5e, 0xed, 0x43, 0x36, 0xd5, 0x58, 0x4e, 0x35,
	0xa5, 0xfb, 0x6d, 0x79, 0xf7, 0x17, 0x00, 0x00, 0xff, 0xff, 0x20, 0xf0, 0x50, 0x9e, 0xca, 0x02,
	0x00, 0x00,
}
