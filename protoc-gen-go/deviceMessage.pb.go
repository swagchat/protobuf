// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: deviceMessage.proto

package protoc_gen_go

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Platform int32

const (
	Platform_PlatformNone    Platform = 0
	Platform_PlatformIos     Platform = 1
	Platform_PlatformAndroid Platform = 2
)

var Platform_name = map[int32]string{
	0: "PlatformNone",
	1: "PlatformIos",
	2: "PlatformAndroid",
}
var Platform_value = map[string]int32{
	"PlatformNone":    0,
	"PlatformIos":     1,
	"PlatformAndroid": 2,
}

func (x Platform) String() string {
	return proto.EnumName(Platform_name, int32(x))
}
func (Platform) EnumDescriptor() ([]byte, []int) { return fileDescriptorDeviceMessage, []int{0} }

type Device struct {
	UserID               string   `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"userId" db:"user_id,notnull"`
	Platform             Platform `protobuf:"varint,12,opt,name=platform,proto3,enum=swagchat.protobuf.Platform" json:"platform,omitempty" db:"platform,notnull"`
	Token                string   `protobuf:"bytes,13,opt,name=token,proto3" json:"token" db:"token"`
	NotificationDeviceID string   `protobuf:"bytes,14,opt,name=notification_device_id,json=notificationDeviceId,proto3" json:"notificationDeviceId" db:"notification_device_id"`
	Deleted              int64    `protobuf:"varint,15,opt,name=deleted,proto3" json:"deleted,omitempty" db:"deleted,notnull"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptorDeviceMessage, []int{0} }

func (m *Device) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Device) GetPlatform() Platform {
	if m != nil {
		return m.Platform
	}
	return Platform_PlatformNone
}

func (m *Device) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Device) GetNotificationDeviceID() string {
	if m != nil {
		return m.NotificationDeviceID
	}
	return ""
}

func (m *Device) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

type CreateDeviceRequest struct {
	UserID   string   `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"userId"`
	Platform Platform `protobuf:"varint,12,opt,name=platform,proto3,enum=swagchat.protobuf.Platform" json:"platform,omitempty"`
	Token    string   `protobuf:"bytes,13,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptorDeviceMessage, []int{1} }

func (m *CreateDeviceRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CreateDeviceRequest) GetPlatform() Platform {
	if m != nil {
		return m.Platform
	}
	return Platform_PlatformNone
}

func (m *CreateDeviceRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetDevicesRequest struct {
	UserID string `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"userId"`
}

func (m *GetDevicesRequest) Reset()                    { *m = GetDevicesRequest{} }
func (m *GetDevicesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDevicesRequest) ProtoMessage()               {}
func (*GetDevicesRequest) Descriptor() ([]byte, []int) { return fileDescriptorDeviceMessage, []int{2} }

func (m *GetDevicesRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type DevicesResponse struct {
	Devices []*Device `protobuf:"bytes,11,rep,name=devices" json:"devices,omitempty"`
}

func (m *DevicesResponse) Reset()                    { *m = DevicesResponse{} }
func (m *DevicesResponse) String() string            { return proto.CompactTextString(m) }
func (*DevicesResponse) ProtoMessage()               {}
func (*DevicesResponse) Descriptor() ([]byte, []int) { return fileDescriptorDeviceMessage, []int{3} }

func (m *DevicesResponse) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type DeleteDeviceRequest struct {
	UserID   string   `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"userId"`
	Platform Platform `protobuf:"varint,12,opt,name=platform,proto3,enum=swagchat.protobuf.Platform" json:"platform,omitempty"`
}

func (m *DeleteDeviceRequest) Reset()                    { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()               {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptorDeviceMessage, []int{4} }

func (m *DeleteDeviceRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DeleteDeviceRequest) GetPlatform() Platform {
	if m != nil {
		return m.Platform
	}
	return Platform_PlatformNone
}

func init() {
	proto.RegisterType((*Device)(nil), "swagchat.protobuf.Device")
	proto.RegisterType((*CreateDeviceRequest)(nil), "swagchat.protobuf.CreateDeviceRequest")
	proto.RegisterType((*GetDevicesRequest)(nil), "swagchat.protobuf.GetDevicesRequest")
	proto.RegisterType((*DevicesResponse)(nil), "swagchat.protobuf.DevicesResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "swagchat.protobuf.DeleteDeviceRequest")
	proto.RegisterEnum("swagchat.protobuf.Platform", Platform_name, Platform_value)
}

func init() { proto.RegisterFile("deviceMessage.proto", fileDescriptorDeviceMessage) }

var fileDescriptorDeviceMessage = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x51, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0x09, 0xa4, 0x65, 0x52, 0x9a, 0x74, 0x63, 0xc0, 0xa5, 0x07, 0x47, 0x3e, 0x45, 0x55,
	0x7e, 0xa4, 0xf4, 0x80, 0xd4, 0x1b, 0x26, 0x08, 0x22, 0x41, 0x41, 0x96, 0xb8, 0x70, 0xa9, 0x1c,
	0x7b, 0xe2, 0x5a, 0xa4, 0xbb, 0xc1, 0xbb, 0x86, 0x07, 0x40, 0xbc, 0x01, 0x17, 0x8e, 0xbc, 0x11,
	0x4f, 0xe0, 0x43, 0x8f, 0x3d, 0xe6, 0x09, 0xd0, 0xfe, 0xa5, 0x85, 0xe4, 0x02, 0x97, 0xde, 0x66,
	0xbe, 0x99, 0xf9, 0xe6, 0x9b, 0x6f, 0xa0, 0x9d, 0xe2, 0xe7, 0x3c, 0xc1, 0x37, 0xc8, 0x79, 0x9c,
	0xe1, 0x60, 0x51, 0x30, 0xc1, 0xc8, 0x3e, 0xff, 0x12, 0x67, 0xc9, 0x79, 0x2c, 0x74, 0x3e, 0x2d,
	0x67, 0x4f, 0xdc, 0x8c, 0x65, 0x4c, 0x65, 0x43, 0x19, 0xe9, 0x42, 0xf0, 0xbd, 0x06, 0xf5, 0xb1,
	0x22, 0x20, 0x2f, 0x60, 0xbb, 0xe4, 0x58, 0x9c, 0xe5, 0xa9, 0xd7, 0xe8, 0x38, 0xdd, 0xfb, 0x61,
	0xef, 0xb2, 0xf2, 0xeb, 0xef, 0x39, 0x16, 0x93, 0xf1, 0x55, 0xe5, 0xd7, 0x65, 0x71, 0x92, 0x2e,
	0x2b, 0xdf, 0x4d, 0xa7, 0x27, 0x81, 0x69, 0xed, 0x51, 0x26, 0x68, 0x39, 0x9f, 0x07, 0x91, 0xa9,
	0x93, 0x08, 0x76, 0x16, 0xf3, 0x58, 0xcc, 0x58, 0x71, 0xe1, 0xed, 0x76, 0x9c, 0xee, 0xde, 0xe8,
	0x70, 0xb0, 0xa6, 0x66, 0xf0, 0xce, 0xb4, 0x84, 0x07, 0xcb, 0xca, 0x7f, 0x28, 0x09, 0xed, 0xd0,
	0x35, 0xe3, 0x8a, 0x87, 0xf4, 0xe1, 0x9e, 0x60, 0x1f, 0x91, 0x7a, 0x0f, 0x94, 0xb0, 0xc7, 0x57,
	0x95, 0xaf, 0x81, 0x65, 0xe5, 0x83, 0x1c, 0x56, 0x49, 0x10, 0x69, 0x90, 0x7c, 0x73, 0xe0, 0x11,
	0x65, 0x22, 0x9f, 0xe5, 0x49, 0x2c, 0x72, 0x46, 0xcf, 0xb4, 0x45, 0xf2, 0xb2, 0x3d, 0x45, 0xf0,
	0xf6, 0xb2, 0xf2, 0xdd, 0xd3, 0x1b, 0x1d, 0xda, 0x02, 0x75, 0xa7, 0x4b, 0xd7, 0x71, 0x79, 0xf5,
	0xa1, 0xdc, 0xb3, 0x99, 0x35, 0x88, 0x36, 0x0e, 0x91, 0x11, 0x6c, 0xa7, 0x38, 0x47, 0x81, 0xa9,
	0xd7, 0xec, 0x38, 0xdd, 0x5a, 0xe8, 0x59, 0xf7, 0x0c, 0x7c, 0x7d, 0xab, 0x6d, 0x3c, 0xb9, 0xfb,
	0xeb, 0xa7, 0xbf, 0x15, 0xfc, 0x70, 0xa0, 0xfd, 0xbc, 0xc0, 0x58, 0xa0, 0x26, 0x8b, 0xf0, 0x53,
	0x89, 0x5c, 0x90, 0xfe, 0xdf, 0x3f, 0x72, 0x37, 0xfd, 0x68, 0xf5, 0x8b, 0xa7, 0xff, 0xf4, 0x8b,
	0x1b, 0x86, 0xbb, 0x7f, 0x18, 0x6e, 0x7c, 0x35, 0xda, 0x5e, 0xc1, 0xfe, 0x4b, 0x14, 0x5a, 0x17,
	0xff, 0x3f, 0x61, 0x86, 0xe9, 0x35, 0x34, 0x57, 0x34, 0x7c, 0xc1, 0x28, 0x47, 0x72, 0x2c, 0x2d,
	0x53, 0x90, 0xd7, 0xe8, 0xd4, 0xba, 0x8d, 0xd1, 0xc1, 0x06, 0xc1, 0xc6, 0x13, 0xdb, 0x69, 0xd8,
	0xbe, 0x3a, 0xd0, 0x1e, 0x2b, 0x17, 0x6f, 0xc5, 0x33, 0xad, 0xe2, 0x28, 0x84, 0x1d, 0x5b, 0x23,
	0x2d, 0xd8, 0xb5, 0xf1, 0x29, 0xa3, 0xd8, 0xda, 0x22, 0x4d, 0x68, 0x58, 0x64, 0xc2, 0x78, 0xcb,
	0x21, 0x6d, 0x68, 0x5a, 0xe0, 0x19, 0x4d, 0x0b, 0x96, 0xa7, 0xad, 0x3b, 0x61, 0xef, 0xc3, 0x51,
	0x96, 0x8b, 0xf3, 0x72, 0x3a, 0x48, 0xd8, 0xc5, 0xd0, 0x2e, 0x1f, 0xda, 0xe5, 0x3a, 0x48, 0xfa,
	0x19, 0xd2, 0x7e, 0xc6, 0xa6, 0x75, 0x95, 0x1e, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x81, 0x7d,
	0xd7, 0xac, 0x09, 0x04, 0x00, 0x00,
}
