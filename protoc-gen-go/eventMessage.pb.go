// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: eventMessage.proto

package protoc_gen_go

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EventType int32

const (
	EventType_EmptyEvent    EventType = 0
	EventType_MessageEvent  EventType = 1
	EventType_UserJoinEvent EventType = 2
)

var EventType_name = map[int32]string{
	0: "EmptyEvent",
	1: "MessageEvent",
	2: "UserJoinEvent",
}
var EventType_value = map[string]int32{
	"EmptyEvent":    0,
	"MessageEvent":  1,
	"UserJoinEvent": 2,
}

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}
func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}
func (x *EventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventType_value, data, "EventType")
	if err != nil {
		return err
	}
	*x = EventType(value)
	return nil
}
func (EventType) EnumDescriptor() ([]byte, []int) { return fileDescriptorEventMessage, []int{0} }

type EventData struct {
	Type    EventType `protobuf:"varint,1,opt,name=type,enum=swagchat.protobuf.EventType" json:"type"`
	Data    []byte    `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	UserIDs []string  `protobuf:"bytes,3,rep,name=user_ids,json=userIds" json:"userIds"`
}

func (m *EventData) Reset()                    { *m = EventData{} }
func (m *EventData) String() string            { return proto.CompactTextString(m) }
func (*EventData) ProtoMessage()               {}
func (*EventData) Descriptor() ([]byte, []int) { return fileDescriptorEventMessage, []int{0} }

func (m *EventData) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_EmptyEvent
}

func (m *EventData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *EventData) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

type UserJoinEventPayload struct {
	RoomID string      `protobuf:"bytes,1,opt,name=room_id,json=roomId" json:"room_id"`
	Users  []*MiniUser `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *UserJoinEventPayload) Reset()                    { *m = UserJoinEventPayload{} }
func (m *UserJoinEventPayload) String() string            { return proto.CompactTextString(m) }
func (*UserJoinEventPayload) ProtoMessage()               {}
func (*UserJoinEventPayload) Descriptor() ([]byte, []int) { return fileDescriptorEventMessage, []int{1} }

func (m *UserJoinEventPayload) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *UserJoinEventPayload) GetUsers() []*MiniUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*EventData)(nil), "swagchat.protobuf.EventData")
	proto.RegisterType((*UserJoinEventPayload)(nil), "swagchat.protobuf.UserJoinEventPayload")
	proto.RegisterEnum("swagchat.protobuf.EventType", EventType_name, EventType_value)
}

func init() { proto.RegisterFile("eventMessage.proto", fileDescriptorEventMessage) }

var fileDescriptorEventMessage = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0xc1, 0x4e, 0xc2, 0x40,
	0x14, 0xa4, 0x50, 0x41, 0x56, 0x24, 0xb0, 0x21, 0xa6, 0x41, 0x93, 0x36, 0x5c, 0x6c, 0x88, 0x94,
	0xc0, 0xc1, 0x83, 0x27, 0xd3, 0xc0, 0xa1, 0x26, 0x24, 0xa6, 0xd1, 0x8b, 0x17, 0xb2, 0xd0, 0x75,
	0x69, 0x62, 0xfb, 0x9a, 0xee, 0xa2, 0xf6, 0x2f, 0xfc, 0x05, 0xff, 0xc6, 0xa3, 0x5f, 0xd0, 0x03,
	0x47, 0xbf, 0xc2, 0xec, 0x96, 0x1e, 0x88, 0xde, 0x66, 0xdf, 0xcc, 0xce, 0xcc, 0x7b, 0x08, 0xd3,
	0x57, 0x1a, 0x8b, 0x05, 0xe5, 0x9c, 0x30, 0xea, 0x24, 0x29, 0x08, 0xc0, 0x5d, 0xfe, 0x46, 0xd8,
	0x7a, 0x43, 0x44, 0xf1, 0x5e, 0x6d, 0x9f, 0xfb, 0x3d, 0x06, 0x0c, 0xd4, 0x6b, 0x2c, 0x51, 0x41,
	0xf4, 0xbb, 0x29, 0x40, 0x74, 0xf0, 0x77, 0xf0, 0xa1, 0xa1, 0xe6, 0x5c, 0x5a, 0xce, 0x88, 0x20,
	0xf8, 0x1a, 0xe9, 0x22, 0x4b, 0xa8, 0xa1, 0x59, 0x9a, 0xdd, 0x9e, 0x5e, 0x38, 0x7f, 0x8c, 0x1d,
	0xa5, 0x7d, 0xc8, 0x12, 0xea, 0xea, 0x5f, 0xb9, 0x59, 0xf1, 0x95, 0x1e, 0x63, 0xa4, 0x07, 0x44,
	0x10, 0xa3, 0x6a, 0x69, 0x76, 0xcb, 0x57, 0x18, 0x4f, 0xd0, 0xf1, 0x96, 0xd3, 0x74, 0x19, 0x06,
	0xdc, 0xa8, 0x59, 0x35, 0xbb, 0xe9, 0x9e, 0xed, 0x72, 0xb3, 0xf1, 0xc8, 0x69, 0xea, 0xcd, 0xf8,
	0x4f, 0x6e, 0x36, 0x24, 0xed, 0x05, 0xdc, 0x2f, 0xc1, 0x8d, 0xfe, 0xfd, 0x69, 0x56, 0x06, 0xef,
	0xa8, 0x27, 0x45, 0x77, 0x10, 0xc6, 0x2a, 0xed, 0x9e, 0x64, 0x2f, 0x40, 0x02, 0x7c, 0x89, 0x1a,
	0xb2, 0xff, 0x32, 0x0c, 0x54, 0xbf, 0xa6, 0xdb, 0x96, 0x0d, 0x76, 0xb9, 0x59, 0xf7, 0x01, 0x22,
	0x6f, 0xe6, 0xd7, 0x25, 0xed, 0x05, 0x78, 0x82, 0x8e, 0xa4, 0x23, 0x37, 0xaa, 0x56, 0xcd, 0x3e,
	0x99, 0x9e, 0xff, 0xb3, 0xc6, 0x22, 0x8c, 0x43, 0x19, 0xe2, 0x17, 0xca, 0x22, 0x79, 0x78, 0xbb,
	0xbf, 0x85, 0xdc, 0x0f, 0xb7, 0x11, 0x9a, 0x47, 0x89, 0xc8, 0xd4, 0xa4, 0x53, 0xc1, 0x1d, 0xd4,
	0xda, 0x9f, 0xae, 0x98, 0x68, 0xb8, 0x8b, 0x4e, 0x0f, 0x8a, 0x76, 0xaa, 0xee, 0xd5, 0xd3, 0x90,
	0x85, 0x62, 0xb3, 0x5d, 0x39, 0x6b, 0x88, 0xc6, 0x65, 0xee, 0xb8, 0xcc, 0x2d, 0xc0, 0x7a, 0xc4,
	0x68, 0x3c, 0x62, 0xf0, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xef, 0xe3, 0x74, 0xcd, 0x01, 0x00,
	0x00,
}
