syntax = "proto2";

package swagchat.protobuf;
option go_package = "github.com/swagchat/protobuf/protoc-gen-go";

import "gogoproto/gogo.proto";
import "deviceMessage.proto";
import "roomMessage.proto";
import "commonMessage.proto";

enum UserRoomsFilter {
  Online = 0;
  Unread = 1;
}

enum PublicProfileScope {
  Self = 0;
  All = 1;
}

message User {
  option (gogoproto.goproto_unrecognized) = false;
  optional uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"id,primarykey,autoincrement\""];
  optional string user_id = 12 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"user_id,notnull\""];
  optional string name = 13 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"name,notnull\""];
  optional string picture_url = 14 [(gogoproto.customname) = "PictureURL", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"picture_url\""];
  optional string information_url = 15 [(gogoproto.customname) = "InformationURL", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"information_url\""];
  optional uint64 unread_count = 16 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"unread_count,notnull\""];
  optional bytes meta_data = 17 [(gogoproto.moretags) = "db:\"-\""];
  optional PublicProfileScope public_profile_scope = 18 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"public_profile_scope,notnull\""];
  optional bool can_block = 19 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"can_block,notnull\""];
  optional string lang = 20 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"lang\""];
  optional string access_token = 21 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"-\""];
  optional string last_access_room_id = 22 [(gogoproto.customname) = "LastAccessRoomID", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"last_access_room_id\""];
  optional int64 last_accessed_timestamp = 23 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"last_accessed,notnull\""];
  optional string last_accessed = 24 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"-\""];
  optional int64 created_timestamp = 31 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"created,notnull\""];
  optional string created = 32 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"-\""];
  optional int64 modified_timestamp = 33 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"modified,notnull\""];
  optional string modified = 34 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"-\""];
  optional int64 deleted_timestamp = 35 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"deleted,notnull\""];
  repeated string block_users = 40 [(gogoproto.moretags) = "db:\"-\""];
  repeated Device devices = 41 [(gogoproto.moretags) = "db:\"-\""];
  repeated int32 roles = 42 [(gogoproto.moretags) = "db:\"-\""];
}

message MiniRoom {
  option (gogoproto.goproto_unrecognized) = false;
  optional string room_id = 1 [(gogoproto.customname) = "RoomID", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"room_id\""];
  optional string user_id = 2 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"user_id\""];
  optional string name = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"name\""];
  optional string picture_url = 4 [(gogoproto.customname) = "PictureURL", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"picture_url\""];
  optional string information_url = 5 [(gogoproto.customname) = "InformationURL", (gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"information_url\""];
  optional bytes meta_data = 6 [(gogoproto.moretags) = "db:\"meta_data\""];
  optional RoomType type = 7 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"type\""];
  optional string last_message = 8 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"last_message\""];
  optional int64 last_message_updated = 9 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"last_message_updated\""];
  optional bool can_left = 10 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"can_left\""];
  optional int64 created_timestamp = 21 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"created\""];
  optional string created = 22 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"created\""];
  optional int64 modified_timestamp = 23 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"modified\""];
  optional string modified = 24 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"modified\""];
  repeated MiniUser users = 30 [(gogoproto.moretags) = "db:\"-\""];
  optional int64 ru_unread_count = 31 [(gogoproto.nullable) = false, (gogoproto.moretags) = "db:\"ru_unread_count\""];
}

message CreateUserRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional string user_id = 11 [(gogoproto.customname) = "UserID", (gogoproto.jsontag) = "userId"];
  optional string name = 12;
  optional string picture_url = 13 [(gogoproto.customname) = "PictureURL", (gogoproto.jsontag) = "pictureUrl"];
  optional string information_url = 14 [(gogoproto.customname) = "InformationURL", (gogoproto.jsontag) = "informationUrl"];
  optional bytes meta_data = 15 [(gogoproto.jsontag) = "metaData"];
  optional PublicProfileScope public_profile_scope = 16 [(gogoproto.jsontag) = "publicProfileScope"];
  optional bool can_block = 17 [(gogoproto.jsontag) = "canBlock"];
  optional string lang = 18;
  repeated string block_users = 19 [(gogoproto.customname) = "BlockUsers", (gogoproto.jsontag) = "blockUsers"];
  repeated int32 roles = 21 [(gogoproto.customname) = "Roles", (gogoproto.jsontag) = "roles"];
}

message RetrieveUsersRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional int32 limit = 11 [(gogoproto.nullable) = false];
  optional int32 offset = 12 [(gogoproto.nullable) = false];
  repeated OrderInfo orders = 13;
}

message UsersResponse {
  option (gogoproto.goproto_unrecognized) = false;
  repeated User users = 1 [(gogoproto.jsontag) = "users"];
  optional int64 allCount = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "allCount"];
  optional int32 limit = 3 [(gogoproto.nullable) = false];
  optional int32 offset = 4 [(gogoproto.nullable) = false];
  repeated OrderInfo orders = 5;
}

message RetrieveUserRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional string user_id = 11 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.jsontag) = "userId"];
}

message UpdateUserRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional string user_id = 11 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.jsontag) = "userId"];
  optional string name = 13;
  optional string picture_url = 14 [(gogoproto.customname) = "PictureURL", (gogoproto.jsontag) = "pictureUrl"];
  optional string information_url = 15 [(gogoproto.customname) = "InformationURL", (gogoproto.jsontag) = "informationUrl"];
  optional uint64 unread_count = 16 [(gogoproto.jsontag) = "unreadCount"];
  optional bytes meta_data = 17 [(gogoproto.jsontag) = "metaData"];
  optional PublicProfileScope public_profile_scope = 18 [(gogoproto.jsontag) = "publicProfileScope"];
  optional bool can_block = 19 [(gogoproto.jsontag) = "canBlock"];
  optional string lang = 20;
  repeated string block_users = 21 [(gogoproto.customname) = "BlockUsers", (gogoproto.jsontag) = "blockUsers"];
  repeated int32 roles = 23 [(gogoproto.customname) = "Roles", (gogoproto.jsontag) = "roles"];
}

message DeleteUserRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional string user_id = 11 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.jsontag) = "userId"];
}

message RetrieveUserRoomsRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional int32 limit = 11 [(gogoproto.nullable) = false];
  optional int32 offset = 12 [(gogoproto.nullable) = false];
  repeated OrderInfo orders = 13;
  optional string user_id = 14 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false];
  optional UserRoomsFilter filter = 15 [(gogoproto.nullable) = false];
}

message UserRoomsResponse {
  option (gogoproto.goproto_unrecognized) = false;
  repeated MiniRoom rooms = 1 [(gogoproto.jsontag) = "rooms"];
  optional int64 allCount = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "allCount"];
  optional int32 limit = 3 [(gogoproto.nullable) = false];
  optional int32 offset = 4 [(gogoproto.nullable) = false];
  repeated OrderInfo orders = 5;
}

message RetrieveContactsRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional string user_id = 11 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.jsontag) = "userId", (gogoproto.moretags) = "db:\"user_id\""];
  optional int32 limit = 12 [(gogoproto.nullable) = false];
  optional int32 offset = 13 [(gogoproto.nullable) = false];
  repeated OrderInfo orders = 14;
}

message RetrieveProfileRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional string user_id = 11 [(gogoproto.customname) = "UserID", (gogoproto.nullable) = false, (gogoproto.jsontag) = "userId"];
}

// message RetrieveDeviceUsersRequest {
//   option (gogoproto.goproto_unrecognized) = false;
//   optional int32 platform = 11 [(gogoproto.nullable) = false];
// }

// message DeviceUsersResponse {
//   option (gogoproto.goproto_unrecognized) = false;
//   repeated User users = 11 [(gogoproto.jsontag) = "users,omitempty"];
//   repeated string user_ids = 12 [(gogoproto.customname) = "UserIDs", (gogoproto.jsontag) = "userIds,omitempty"];
// }

message RetrieveRoleUsersRequest {
  option (gogoproto.goproto_unrecognized) = false;
  optional int32 role_id = 11 [(gogoproto.customname) = "RoleID", (gogoproto.jsontag) = "roleId"];
}

message RoleUsersResponse {
  option (gogoproto.goproto_unrecognized) = false;
  repeated User users = 11 [(gogoproto.jsontag) = "users,omitempty"];
  repeated string user_ids = 12 [(gogoproto.customname) = "UserIDs", (gogoproto.jsontag) = "userIds,omitempty"];
}
