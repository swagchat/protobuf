// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: roomUserService.proto

package protobuf

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoomUserService service

type RoomUserServiceClient interface {
	CreateRoomUsers(ctx context.Context, in *CreateRoomUsersRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	UpdateRoomUser(ctx context.Context, in *UpdateRoomUserRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetUserIdsOfRoomUser(ctx context.Context, in *GetUserIdsOfRoomUserRequest, opts ...grpc.CallOption) (*UserIds, error)
	DeleteRoomUsers(ctx context.Context, in *DeleteRoomUsersRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type roomUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomUserServiceClient(cc *grpc.ClientConn) RoomUserServiceClient {
	return &roomUserServiceClient{cc}
}

func (c *roomUserServiceClient) CreateRoomUsers(ctx context.Context, in *CreateRoomUsersRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomUserService/CreateRoomUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomUserServiceClient) UpdateRoomUser(ctx context.Context, in *UpdateRoomUserRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomUserService/UpdateRoomUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomUserServiceClient) GetUserIdsOfRoomUser(ctx context.Context, in *GetUserIdsOfRoomUserRequest, opts ...grpc.CallOption) (*UserIds, error) {
	out := new(UserIds)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomUserService/GetUserIdsOfRoomUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomUserServiceClient) DeleteRoomUsers(ctx context.Context, in *DeleteRoomUsersRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/swagchat.protobuf.RoomUserService/DeleteRoomUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoomUserService service

type RoomUserServiceServer interface {
	CreateRoomUsers(context.Context, *CreateRoomUsersRequest) (*google_protobuf1.Empty, error)
	UpdateRoomUser(context.Context, *UpdateRoomUserRequest) (*google_protobuf1.Empty, error)
	GetUserIdsOfRoomUser(context.Context, *GetUserIdsOfRoomUserRequest) (*UserIds, error)
	DeleteRoomUsers(context.Context, *DeleteRoomUsersRequest) (*google_protobuf1.Empty, error)
}

func RegisterRoomUserServiceServer(s *grpc.Server, srv RoomUserServiceServer) {
	s.RegisterService(&_RoomUserService_serviceDesc, srv)
}

func _RoomUserService_CreateRoomUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomUserServiceServer).CreateRoomUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomUserService/CreateRoomUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomUserServiceServer).CreateRoomUsers(ctx, req.(*CreateRoomUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomUserService_UpdateRoomUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoomUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomUserServiceServer).UpdateRoomUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomUserService/UpdateRoomUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomUserServiceServer).UpdateRoomUser(ctx, req.(*UpdateRoomUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomUserService_GetUserIdsOfRoomUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserIdsOfRoomUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomUserServiceServer).GetUserIdsOfRoomUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomUserService/GetUserIdsOfRoomUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomUserServiceServer).GetUserIdsOfRoomUser(ctx, req.(*GetUserIdsOfRoomUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomUserService_DeleteRoomUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoomUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomUserServiceServer).DeleteRoomUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swagchat.protobuf.RoomUserService/DeleteRoomUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomUserServiceServer).DeleteRoomUsers(ctx, req.(*DeleteRoomUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "swagchat.protobuf.RoomUserService",
	HandlerType: (*RoomUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoomUsers",
			Handler:    _RoomUserService_CreateRoomUsers_Handler,
		},
		{
			MethodName: "UpdateRoomUser",
			Handler:    _RoomUserService_UpdateRoomUser_Handler,
		},
		{
			MethodName: "GetUserIdsOfRoomUser",
			Handler:    _RoomUserService_GetUserIdsOfRoomUser_Handler,
		},
		{
			MethodName: "DeleteRoomUsers",
			Handler:    _RoomUserService_DeleteRoomUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "roomUserService.proto",
}

func init() { proto.RegisterFile("roomUserService.proto", fileDescriptorRoomUserService) }

var fileDescriptorRoomUserService = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x2b, 0x06, 0x06, 0x0f, 0x54, 0x98, 0x8f, 0xc1, 0x54, 0x0c, 0x9d, 0x60, 0x71, 0x24,
	0xf8, 0x07, 0x7c, 0x08, 0x31, 0x20, 0xa4, 0x42, 0x19, 0xd8, 0x9c, 0xe4, 0xea, 0x46, 0xaa, 0x73,
	0xc1, 0x77, 0x01, 0xf1, 0xe3, 0x91, 0x50, 0x48, 0x1c, 0x48, 0xb1, 0x94, 0x2d, 0xf1, 0x3d, 0x7e,
	0xdf, 0x47, 0x67, 0x71, 0xe4, 0x11, 0xdd, 0x92, 0xc0, 0x3f, 0x81, 0x7f, 0x2f, 0x32, 0xd0, 0x95,
	0x47, 0x46, 0xb9, 0x4f, 0x1f, 0xc6, 0x66, 0x6b, 0xc3, 0xed, 0x7f, 0x5a, 0xaf, 0xd4, 0xcc, 0x22,
	0xda, 0x0d, 0x24, 0xa6, 0x2a, 0x12, 0x53, 0x96, 0xc8, 0x86, 0x0b, 0x2c, 0xa9, 0x05, 0xd4, 0x49,
	0x37, 0x0d, 0x78, 0x02, 0xae, 0xe2, 0xcf, 0x6e, 0xd8, 0x97, 0x3c, 0x00, 0x91, 0xb1, 0x5d, 0x89,
	0x3a, 0xc8, 0xd0, 0x39, 0x2c, 0x07, 0x87, 0x17, 0x5f, 0x3b, 0x62, 0xba, 0x18, 0x3a, 0xc9, 0x17,
	0x31, 0xbd, 0xf6, 0x60, 0x18, 0xc2, 0x80, 0xe4, 0xb9, 0xfe, 0x67, 0xa8, 0xb7, 0x98, 0x05, 0xbc,
	0xd5, 0x40, 0xac, 0x8e, 0x75, 0xeb, 0xf6, 0x0b, 0xde, 0x36, 0x6e, 0xf3, 0x89, 0x7c, 0x16, 0x7b,
	0xcb, 0x2a, 0xff, 0x73, 0x47, 0x9e, 0x45, 0x62, 0x87, 0xc8, 0x78, 0x6a, 0x2e, 0x0e, 0xef, 0x80,
	0x1b, 0xf6, 0x3e, 0xa7, 0xc7, 0x55, 0x9f, 0xad, 0x23, 0xd9, 0x31, 0x30, 0x34, 0xa8, 0x98, 0x4b,
	0x0b, 0xcf, 0x27, 0xcd, 0x4e, 0x6e, 0x60, 0x03, 0x63, 0x3b, 0xd9, 0x62, 0x46, 0xed, 0xaf, 0x4e,
	0x5f, 0x67, 0xb6, 0xe0, 0x75, 0x9d, 0xea, 0x0c, 0x5d, 0x12, 0x02, 0xfb, 0x77, 0x4d, 0x77, 0x7f,
	0xbe, 0x2e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x3d, 0xa3, 0x2f, 0x39, 0x02, 0x00, 0x00,
}
